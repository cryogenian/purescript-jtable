// Generated by psc version 0.6.8
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function cons(e) {
      return function(l) {
        return [e].concat(l);
      };
    }
    ;
    
    function showStringImpl(s) {
      return JSON.stringify(s);
    }
    ;
    
    function showNumberImpl(n) {
      return n.toString();
    }
    ;
    
    function numAdd(n1) {
      return function(n2) {
        return n1 + n2;
      };
    }
    ;
    
    function numSub(n1) {
      return function(n2) {
        return n1 - n2;
      };
    }
    ;
    
    function numMul(n1) {
      return function(n2) {
        return n1 * n2;
      };
    }
    ;
    
    function numDiv(n1) {
      return function(n2) {
        return n1 / n2;
      };
    }
    ;
    
    function numMod(n1) {
      return function(n2) {
        return n1 % n2;
      };
    }
    ;
    
    function refEq(r1) {
      return function(r2) {
        return r1 === r2;
      };
    }
    ;
    
    function refIneq(r1) {
      return function(r2) {
        return r1 !== r2;
      };
    }
    ;
    
    function unsafeCompareImpl(lt) {
      return function(eq) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x > y ? gt : eq;
            };
          };
        };
      };
    }
    ;
    
    function numShl(n1) {
      return function(n2) {
        return n1 << n2;
      };
    }
    ;
    
    function numShr(n1) {
      return function(n2) {
        return n1 >> n2;
      };
    }
    ;
    
    function numZshr(n1) {
      return function(n2) {
        return n1 >>> n2;
      };
    }
    ;
    
    function numAnd(n1) {
      return function(n2) {
        return n1 & n2;
      };
    }
    ;
    
    function numOr(n1) {
      return function(n2) {
        return n1 | n2;
      };
    }
    ;
    
    function numXor(n1) {
      return function(n2) {
        return n1 ^ n2;
      };
    }
    ;
    
    function numComplement(n) {
      return ~n;
    }
    ;
    
    function boolAnd(b1) {
      return function(b2) {
        return b1 && b2;
      };
    }
    ;
    
    function boolOr(b1) {
      return function(b2) {
        return b1 || b2;
      };
    }
    ;
    
    function boolNot(b) {
      return !b;
    }
    ;
    
    function concatString(s1) {
      return function(s2) {
        return s1 + s2;
      };
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    
    /**
     *  | Addition and multiplication
     */
    var Semiring = function ($times, $plus, one, zero) {
        this["*"] = $times;
        this["+"] = $plus;
        this.one = one;
        this.zero = zero;
    };
    
    /**
     *  | Semiring with modulo operation and division where
     *  | ```a / b * b + (a `mod` b) = a```
     */
    var ModuloSemiring = function ($div, __superclass_Prelude$dotSemiring_0, mod) {
        this["/"] = $div;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
        this.mod = mod;
    };
    
    /**
     *  | Addition, multiplication, and subtraction
     */
    var Ring = function ($minus, __superclass_Prelude$dotSemiring_0) {
        this["-"] = $minus;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var Bits = function ($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    
    /**
     *  | Semiring with modulo operation and division where
     *  | ```a / b * b + (a `mod` b) = a```
     */
    var $div = function (dict) {
        return dict["/"];
    };
    
    /**
     *  | Addition, multiplication, and subtraction
     */
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    
    /**
     *  | Addition and multiplication
     */
    var $plus = function (dict) {
        return dict["+"];
    };
    
    /**
     *  | Addition and multiplication
     */
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = numMod;
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    
    /**
     *  | Addition and multiplication
     */
    var zero = function (dict) {
        return dict.zero;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var showString = new Show(showStringImpl);
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_98) {
        if (_98) {
            return "true";
        };
        if (!_98) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semiringNumber = new Semiring(numMul, numAdd, 1, 0);
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var ringNumber = new Ring(numSub, function () {
        return semiringNumber;
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (__dict_Ring_6) {
        return function (a) {
            return $minus(__dict_Ring_6)(zero(__dict_Ring_6["__superclass_Prelude.Semiring_0"]()))(a);
        };
    };
    var moduloSemiringNumber = new ModuloSemiring(numDiv, function () {
        return semiringNumber;
    }, function (_99) {
        return function (_100) {
            return 0;
        };
    });
    var liftA1 = function (__dict_Applicative_8) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_8["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_8)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = new Functor($less$less$less(semigroupoidArr));
    
    /**
     *  | Flips the order of the arguments to a function of two arguments.
     */
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    
    /**
     *  | Returns its first argument and ignores its second.
     */
    var $$const = function (_93) {
        return function (_94) {
            return _93;
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _1332 = compare(__dict_Ord_12)(a1)(a2);
                if (_1332 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _1333 = compare(__dict_Ord_13)(a1)(a2);
                if (_1333 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _1334 = compare(__dict_Ord_14)(a1)(a2);
                if (_1334 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_15) {
        return function (a1) {
            return function (a2) {
                var _1335 = compare(__dict_Ord_15)(a1)(a2);
                if (_1335 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var applyArr = new Apply(function (f) {
        return function (g) {
            return function (x) {
                return f(x)(g(x));
            };
        };
    }, function () {
        return functorArr;
    });
    var ap = function (__dict_Monad_16) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(f)(function (_5) {
                    return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(a)(function (_4) {
                        return $$return(__dict_Monad_16)(_5(_4));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Ring: Ring, 
        ModuloSemiring: ModuloSemiring, 
        Semiring: Semiring, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        complement: complement, 
        shl: shl, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        negate: negate, 
        "%": $percent, 
        "-": $minus, 
        "/": $div, 
        "*": $times, 
        zero: zero, 
        "+": $plus, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        "const": $$const, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        functorArr: functorArr, 
        applyArr: applyArr, 
        semiringNumber: semiringNumber, 
        ringNumber: ringNumber, 
        moduloSemiringNumber: moduloSemiringNumber, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupString: semigroupString
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function unsafeIndex(xs) {
      return function(n) {
        return xs[n];
      };
    }
    ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.$$Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var ceil = Math.ceil;;
    var floor = Math.floor;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    var round = Math.round;;
    return {
        round: round, 
        min: min, 
        max: max, 
        floor: floor, 
        ceil: ceil
    };
})();
var PS = PS || {};
PS.Global = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    return {
        isNaN: isNaN
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Profunctor = function (dimap) {
        this.dimap = dimap;
    };
    var dimap = function (dict) {
        return dict.dimap;
    };
    var lmap = function (__dict_Profunctor_18) {
        return function (a2b) {
            return dimap(__dict_Profunctor_18)(a2b)(Prelude.id(Prelude.categoryArr));
        };
    };
    return {
        Profunctor: Profunctor, 
        lmap: lmap, 
        dimap: dimap
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function runFn3(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return fn(a, b, c);
          };
        };
      };
    }
    ;
    
    function runFn4(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return fn(a, b, c, d);
            };
          };
        };
      };
    }
    ;
    
    function runFn7(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return fn(a, b, c, d, e, f, g);
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    return {
        runFn7: runFn7, 
        runFn4: runFn4, 
        runFn3: runFn3
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
    return {
        fromCharCode: fromCharCode
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    
    function runPure(f) {
      return f();
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Random = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $$Math = PS.$$Math;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function random() {
    return Math.random();
  }
  ;
    return {
        random: random
    };
})();
var PS = PS || {};
PS.Data_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function defer(thunk) {    if (this instanceof defer) {      this.thunk = thunk;      return this;    } else {      return new defer(thunk);    }}defer.prototype.force = function () {    var value = this.thunk();    delete this.thunk;    this.force = function () {        return value;    };    return value;};;
    function force(l) {  return l.force();};
    var functorLazy = new Prelude.Functor(function (f) {
        return function (l) {
            return defer(function (_158) {
                return f(force(l));
            });
        };
    });
    return {
        force: force, 
        defer: defer, 
        functorLazy: functorLazy
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $eq$less$less = function (__dict_Bind_64) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_64)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_65) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_65)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_66) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_66)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    return {
        join: join, 
        "<=<": $less$eq$less, 
        "=<<": $eq$less$less
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $times$greater = function (__dict_Apply_69) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_69)(Prelude["<$>"](__dict_Apply_69["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    return {
        "*>": $times$greater
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    return {
        Alternative: Alternative
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_79) {
        return function (_174) {
            if (_174) {
                return Prelude["return"](__dict_MonadPlus_79["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_174) {
                return Control_Plus.empty((__dict_MonadPlus_79["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var functorEither = new Prelude.Functor(function (_180) {
        return function (_181) {
            if (_181 instanceof Left) {
                return new Left(_181.value0);
            };
            if (_181 instanceof Right) {
                return new Right(_180(_181.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var either = function (_177) {
        return function (_178) {
            return function (_179) {
                if (_179 instanceof Left) {
                    return _177(_179.value0);
                };
                if (_179 instanceof Right) {
                    return _178(_179.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var applyEither = new Prelude.Apply(function (_182) {
        return function (_183) {
            if (_182 instanceof Left) {
                return new Left(_182.value0);
            };
            if (_182 instanceof Right) {
                return Prelude["<$>"](functorEither)(_182.value0)(_183);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_176) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    return {
        Left: Left, 
        Right: Right, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        bindEither: bindEither
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var maybe = function (_200) {
        return function (_201) {
            return function (_202) {
                if (_202 instanceof Nothing) {
                    return _200;
                };
                if (_202 instanceof Just) {
                    return _201(_202.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var functorMaybe = new Prelude.Functor(function (_203) {
        return function (_204) {
            if (_204 instanceof Just) {
                return new Just(_203(_204.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var applyMaybe = new Prelude.Apply(function (_205) {
        return function (_206) {
            if (_205 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_205.value0)(_206);
            };
            if (_205 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_209) {
        return function (_210) {
            if (_209 instanceof Just) {
                return _210(_209.value0);
            };
            if (_209 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_207) {
        return function (_208) {
            if (_207 instanceof Nothing) {
                return _208;
            };
            return _207;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        applicativeMaybe: applicativeMaybe, 
        altMaybe: altMaybe, 
        plusMaybe: plusMaybe, 
        alternativeMaybe: alternativeMaybe, 
        bindMaybe: bindMaybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            var _1369 = n < 0 || (n >= length(xs) || isInt(n));
            if (_1369) {
                return Data_Maybe.Nothing.value;
            };
            if (!_1369) {
                return new Data_Maybe.Just(xs[n]);
            };
            throw new Error("Failed pattern match");
        };
    };
    var tail = function (_222) {
        if (_222.length >= 1) {
            var _1372 = _222.slice(1);
            return new Data_Maybe.Just(_1372);
        };
        return Data_Maybe.Nothing.value;
    };
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _1373 = comp(x)(y);
                    if (_1373 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_1373 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_1373 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_224) {
        if (_224.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_231) {
        return function (_232) {
            if (_232.length === 0) {
                return [  ];
            };
            if (_232.length >= 1) {
                var _1378 = _232.slice(1);
                return Prelude[":"](_232[0])(nubBy(_231)(filter(function (y) {
                    return !_231(_232[0])(y);
                })(_1378)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_101) {
        return nubBy(Prelude["=="](__dict_Eq_101));
    };
    var head = function (_220) {
        if (_220.length >= 1) {
            var _1381 = _220.slice(1);
            return new Data_Maybe.Just(_220[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var functorArray = new Prelude.Functor(map);
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    return {
        sortBy: sortBy, 
        nubBy: nubBy, 
        nub: nub, 
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        updateAt: updateAt, 
        concat: concat, 
        append: append, 
        findIndex: findIndex, 
        length: length, 
        map: map, 
        "null": $$null, 
        tail: tail, 
        head: head, 
        singleton: singleton, 
        snoc: snoc, 
        "..": $dot$dot, 
        "!!": $bang$bang, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Array = PS.Data_Array;
    var Data_Either = PS.Data_Either;
    
  function unsafeFromForeign(value) {
    return value;
  }
  ;
    
  function tagOf(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  }
  ;
    var TypeMismatch = (function () {
        function TypeMismatch(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        TypeMismatch.create = function (value0) {
            return function (value1) {
                return new TypeMismatch(value0, value1);
            };
        };
        return TypeMismatch;
    })();
    var unsafeReadPrim = function (_241) {
        return function (_242) {
            if (tagOf(_242) === _241) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_242));
            };
            return new Data_Either.Left(new TypeMismatch(_241, tagOf(_242)));
        };
    };
    var readString = unsafeReadPrim("String");
    return {
        TypeMismatch: TypeMismatch, 
        readString: readString, 
        tagOf: tagOf, 
        unsafeFromForeign: unsafeFromForeign
    };
})();
var PS = PS || {};
PS.Control_Monad_JQuery = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var DOM = PS.DOM;
    
  function ready(func) {
    return function () {
      jQuery(document).ready(func);
    };
  }
  ;
    
  function select(selector) {
    return function () {
      return jQuery(selector);
    };
  }
  ;
    
  function create(html) {
    return function () {
      return jQuery(html);
    };
  }
  ;
    
  function append(ob1) {
    return function(ob) {
      return function () {
        return ob.append(ob1);
      };
    };
  }
  ;
    
  function clear(ob) {
    return function () {
      return ob.empty();
    };
  }
  ;
    
  function getText(ob) {
    return function() {
      return ob.text();
    };
  }
  ;
    
  function getValue(ob) {
    return function() {
      return ob.val();
    };
  }
  ;
    
  function setValue(val) {
    return function(ob) {
      return function() {
        return ob.val(val);
      };
    };
  }
  ;
    
  function on(evt) {
    return function(act) {
      return function(ob) {
        return function() {
          return ob.on(evt, function(e) {
            act(e)(jQuery(this))();
          });
        };
      };
    };
  }
  ;
    return {
        on: on, 
        setValue: setValue, 
        getValue: getValue, 
        getText: getText, 
        clear: clear, 
        append: append, 
        create: create, 
        select: select, 
        ready: ready
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidArray: monoidArray
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var uncurry = function (_343) {
        return function (_344) {
            return _343(_344.value0)(_344.value1);
        };
    };
    var swap = function (_346) {
        return new Tuple(_346.value1, _346.value0);
    };
    var snd = function (_342) {
        return _342.value1;
    };
    var fst = function (_341) {
        return _341.value0;
    };
    return {
        Tuple: Tuple, 
        swap: swap, 
        zip: zip, 
        uncurry: uncurry, 
        snd: snd, 
        fst: fst
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Strong = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Tuple = PS.Data_Tuple;
    var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
        this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
        this.first = first;
        this.second = second;
    };
    var first = function (dict) {
        return dict.first;
    };
    return {
        Strong: Strong, 
        first: first
    };
})();
var PS = PS || {};
PS.Control_Arrow = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Tuple = PS.Data_Tuple;
    var Arrow = function (__superclass_Data$dotProfunctor$dotStrong$dotStrong_1, __superclass_Prelude$dotCategory_0, arr) {
        this["__superclass_Data.Profunctor.Strong.Strong_1"] = __superclass_Data$dotProfunctor$dotStrong$dotStrong_1;
        this["__superclass_Prelude.Category_0"] = __superclass_Prelude$dotCategory_0;
        this.arr = arr;
    };
    var arr = function (dict) {
        return dict.arr;
    };
    return {
        Arrow: Arrow, 
        arr: arr
    };
})();
var PS = PS || {};
PS.Data_Machine_Mealy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Bind = PS.Control_Bind;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Arrow = PS.Control_Arrow;
    var Control_Monad = PS.Control_Monad;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var MealyT = (function () {
        function MealyT(value0) {
            this.value0 = value0;
        };
        MealyT.create = function (value0) {
            return new MealyT(value0);
        };
        return MealyT;
    })();
    var Emit = (function () {
        function Emit(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Emit.create = function (value0) {
            return function (value1) {
                return new Emit(value0, value1);
            };
        };
        return Emit;
    })();
    var Halt = (function () {
        function Halt() {

        };
        Halt.value = new Halt();
        return Halt;
    })();
    var stepMealy = function (__dict_Monad_276) {
        return function (_432) {
            return function (_433) {
                return Control_Bind.join(__dict_Monad_276["__superclass_Prelude.Bind_1"]())(Prelude["<*>"]((__dict_Monad_276["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(_433.value0)(Prelude.pure(__dict_Monad_276["__superclass_Prelude.Applicative_0"]())(_432)));
            };
        };
    };
    var pureMealy = function (__dict_Applicative_278) {
        return function (f) {
            return MealyT.create(Prelude.pure(__dict_Applicative_278)(function (s) {
                return Prelude.pure(__dict_Applicative_278)(f(s));
            }));
        };
    };
    var mealy = function (__dict_Applicative_281) {
        return function (f) {
            return MealyT.create(Prelude.pure(__dict_Applicative_281)(f));
        };
    };
    var profunctorMealy = function (__dict_Monad_283) {
        return new Data_Profunctor.Profunctor(function (l) {
            return function (r) {
                var remap = function (m) {
                    var g = function (_449) {
                        if (_449 instanceof Emit) {
                            return new Emit(r(_449.value0), remap(_449.value1));
                        };
                        if (_449 instanceof Halt) {
                            return Halt.value;
                        };
                        throw new Error("Failed pattern match");
                    };
                    return mealy(__dict_Monad_283["__superclass_Prelude.Applicative_0"]())(function (s) {
                        return Prelude["<$>"](((__dict_Monad_283["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_283)(l(s))(m));
                    });
                };
                return remap;
            };
        });
    };
    var semigroupMealy = function (__dict_Monad_284) {
        return new Prelude.Semigroup(function (l) {
            return function (r) {
                return mealy(__dict_Monad_284["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var g = function (_451) {
                        if (_451 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_284["__superclass_Prelude.Applicative_0"]())(new Emit(_451.value0, Prelude["<>"](semigroupMealy(__dict_Monad_284))(_451.value1)(r)));
                        };
                        if (_451 instanceof Halt) {
                            return stepMealy(__dict_Monad_284)(s)(r);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_284["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_284)(s)(l))(g);
                });
            };
        });
    };
    var semigroupoidMealy = function (__dict_Monad_285) {
        return new Prelude.Semigroupoid(function (f) {
            return function (g) {
                var gb = function (_452) {
                    if (_452 instanceof Halt) {
                        return Prelude.pure(__dict_Monad_285["__superclass_Prelude.Applicative_0"]())(Halt.value);
                    };
                    if (_452 instanceof Emit) {
                        var fc = function (_453) {
                            if (_453 instanceof Emit) {
                                return new Emit(_453.value0, Prelude["<<<"](semigroupoidMealy(__dict_Monad_285))(_453.value1)(_452.value1));
                            };
                            if (_453 instanceof Halt) {
                                return Halt.value;
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](((__dict_Monad_285["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(fc)(stepMealy(__dict_Monad_285)(_452.value0)(f));
                    };
                    throw new Error("Failed pattern match");
                };
                return mealy(__dict_Monad_285["__superclass_Prelude.Applicative_0"]())(function (b) {
                    return Prelude[">>="](__dict_Monad_285["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_285)(b)(g))(gb);
                });
            };
        });
    };
    var strongMealy = function (__dict_Monad_288) {
        return new Data_Profunctor_Strong.Strong(function () {
            return profunctorMealy(__dict_Monad_288);
        }, function (m) {
            return mealy(__dict_Monad_288["__superclass_Prelude.Applicative_0"]())(function (s) {
                var d = Data_Tuple.snd(s);
                var g = function (_450) {
                    if (_450 instanceof Emit) {
                        return new Emit(new Data_Tuple.Tuple(_450.value0, d), Data_Profunctor_Strong.first(strongMealy(__dict_Monad_288))(_450.value1));
                    };
                    if (_450 instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match");
                };
                var b = Data_Tuple.fst(s);
                return Prelude["<$>"](((__dict_Monad_288["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_288)(b)(m));
            });
        }, Prelude["<<<"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(profunctorMealy(__dict_Monad_288))(Data_Tuple.swap)(Data_Tuple.swap))(Data_Profunctor_Strong.first(strongMealy(__dict_Monad_288))));
    };
    var halt = function (__dict_Applicative_293) {
        return pureMealy(__dict_Applicative_293)(Prelude["const"](Halt.value));
    };
    var take = function (__dict_Monad_297) {
        return function (n) {
            return function (m) {
                var f = function (_436) {
                    if (_436 instanceof Halt) {
                        return Halt.value;
                    };
                    if (_436 instanceof Emit) {
                        return new Emit(_436.value0, take(__dict_Monad_297)(n - 1)(_436.value1));
                    };
                    throw new Error("Failed pattern match");
                };
                var _1418 = n <= 0;
                if (_1418) {
                    return halt(__dict_Monad_297["__superclass_Prelude.Applicative_0"]());
                };
                if (!_1418) {
                    return mealy(__dict_Monad_297["__superclass_Prelude.Applicative_0"]())(function (s) {
                        return Prelude["<$>"](((__dict_Monad_297["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(stepMealy(__dict_Monad_297)(s)(m));
                    });
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var functorMealy = function (__dict_Monad_301) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                var g = function (_446) {
                    if (_446 instanceof Emit) {
                        return new Emit(f(_446.value0), Prelude["<$>"](functorMealy(__dict_Monad_301))(f)(_446.value1));
                    };
                    if (_446 instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return mealy(__dict_Monad_301["__superclass_Prelude.Applicative_0"]())(function (s) {
                    return Prelude["<$>"](((__dict_Monad_301["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_301)(s)(m));
                });
            };
        });
    };
    var categoryMealy = function (__dict_Monad_306) {
        return new Prelude.Category(function () {
            return semigroupoidMealy(__dict_Monad_306);
        }, pureMealy(__dict_Monad_306["__superclass_Prelude.Applicative_0"]())(function (t) {
            return new Emit(t, Prelude.id(categoryMealy(__dict_Monad_306)));
        }));
    };
    var arrowMealy = function (__dict_Monad_308) {
        return new Control_Arrow.Arrow(function () {
            return strongMealy(__dict_Monad_308);
        }, function () {
            return categoryMealy(__dict_Monad_308);
        }, function (f) {
            return pureMealy(__dict_Monad_308["__superclass_Prelude.Applicative_0"]())(function (b) {
                return new Emit(f(b), halt(__dict_Monad_308["__superclass_Prelude.Applicative_0"]()));
            });
        });
    };
    var applyMealy = function (__dict_Monad_309) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                return mealy(__dict_Monad_309["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var ap = function (_447) {
                        return function (_448) {
                            if (_447 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_448 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_447 instanceof Emit && _448 instanceof Emit) {
                                return new Emit(_447.value0(_448.value0), Prelude["<*>"](applyMealy(__dict_Monad_309))(_447.value1)(_448.value1));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return Prelude["<*>"]((__dict_Monad_309["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Monad_309["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(ap)(stepMealy(__dict_Monad_309)(s)(f)))(stepMealy(__dict_Monad_309)(s)(x));
                });
            };
        }, function () {
            return functorMealy(__dict_Monad_309);
        });
    };
    var bindMealy = function (__dict_Monad_307) {
        return new Prelude.Bind(function (m) {
            return function (f) {
                return mealy(__dict_Monad_307["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var g = function (_454) {
                        if (_454 instanceof Emit) {
                            var h = function (_455) {
                                if (_455 instanceof Emit) {
                                    return new Emit(_455.value0, Prelude["<>"](semigroupMealy(__dict_Monad_307))(_455.value1)(Prelude[">>="](bindMealy(__dict_Monad_307))(_454.value1)(f)));
                                };
                                if (_455 instanceof Halt) {
                                    return Halt.value;
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Prelude["<$>"](((__dict_Monad_307["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(stepMealy(__dict_Monad_307)(s)(f(_454.value0)));
                        };
                        if (_454 instanceof Halt) {
                            return Prelude.pure(__dict_Monad_307["__superclass_Prelude.Applicative_0"]())(Halt.value);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_307["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_307)(s)(m))(g);
                });
            };
        }, function () {
            return applyMealy(__dict_Monad_307);
        });
    };
    var applicativeMealy = function (__dict_Monad_310) {
        return new Prelude.Applicative(function () {
            return applyMealy(__dict_Monad_310);
        }, function (t) {
            return pureMealy(__dict_Monad_310["__superclass_Prelude.Applicative_0"]())(function (s) {
                return new Emit(t, halt(__dict_Monad_310["__superclass_Prelude.Applicative_0"]()));
            });
        });
    };
    var monadMealy = function (__dict_Monad_280) {
        return new Prelude.Monad(function () {
            return applicativeMealy(__dict_Monad_280);
        }, function () {
            return bindMealy(__dict_Monad_280);
        });
    };
    return {
        Emit: Emit, 
        Halt: Halt, 
        MealyT: MealyT, 
        take: take, 
        halt: halt, 
        mealy: mealy, 
        pureMealy: pureMealy, 
        stepMealy: stepMealy, 
        functorMealy: functorMealy, 
        applyMealy: applyMealy, 
        applicativeMealy: applicativeMealy, 
        profunctorMealy: profunctorMealy, 
        strongMealy: strongMealy, 
        semigroupMealy: semigroupMealy, 
        semigroupoidMealy: semigroupoidMealy, 
        categoryMealy: categoryMealy, 
        arrowMealy: arrowMealy, 
        bindMealy: bindMealy, 
        monadMealy: monadMealy
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_Last = PS.Data_Monoid_Last;
    var Data_Monoid_Multiplicative = PS.Data_Monoid_Multiplicative;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  }
  ;
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  }
  ;
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_319) {
        return function (__dict_Foldable_320) {
            return function (f) {
                return foldr(__dict_Foldable_320)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_319["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_319)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_321) {
        return function (__dict_Foldable_322) {
            return Prelude.flip(traverse_(__dict_Applicative_321)(__dict_Foldable_322));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var mconcat = function (__dict_Foldable_327) {
        return function (__dict_Monoid_328) {
            return foldl(__dict_Foldable_327)(Prelude["<>"](__dict_Monoid_328["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_328));
        };
    };
    var or = function (__dict_Foldable_329) {
        return foldl(__dict_Foldable_329)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var foldableArray = new Foldable(function (__dict_Monoid_337) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_337["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_337))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var any = function (__dict_Foldable_346) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_346)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_347) {
        return function (__dict_Foldable_348) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_348))(Prelude["=="](__dict_Eq_347));
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        elem: elem, 
        any: any, 
        or: or, 
        mconcat: mconcat, 
        for_: for_, 
        traverse_: traverse_, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Maybe = PS.Data_Maybe;
    
  function _new() {
    return {};
  }
  ;
    
  function poke(m) {
    return function(k) {
      return function(v) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  ;
    var $$new = _new;
    return {
        poke: poke, 
        "new": $$new
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Data_Maybe = PS.Data_Maybe;
    
    function fromCharArray(a) {
      return a.join('');
    }
    ;
    
    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;
    
    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    return {
        joinWith: joinWith, 
        split: split, 
        localeCompare: localeCompare, 
        indexOf: indexOf, 
        fromCharArray: fromCharArray
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    
  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;
    
  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;
    
  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;
    
  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;
    var renderFlags = function (flags) {
        return (function () {
            if (flags.global) {
                return "g";
            };
            if (!flags.global) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.ignoreCase) {
                return "i";
            };
            if (!flags.ignoreCase) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.multiline) {
                return "m";
            };
            if (!flags.multiline) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.sticky) {
                return "y";
            };
            if (!flags.sticky) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + (function () {
            if (flags.unicode) {
                return "u";
            };
            if (!flags.unicode) {
                return "";
            };
            throw new Error("Failed pattern match");
        })())));
    };
    var regex = function (source) {
        return function (flags) {
            return regex$prime(source)(renderFlags(flags));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    var noFlags = {
        global: false, 
        ignoreCase: false, 
        multiline: false, 
        sticky: false, 
        unicode: false
    };
    var match = function (r) {
        return function (s) {
            return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        noFlags: noFlags, 
        replace: replace, 
        match: match, 
        test: test, 
        parseFlags: parseFlags, 
        renderFlags: renderFlags, 
        regex: regex
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Monoid_Last = PS.Data_Monoid_Last;
    var Data_Monoid_Multiplicative = PS.Data_Monoid_Multiplicative;
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_366) {
        return function (_570) {
            if (_570.length === 0) {
                return Prelude.pure(__dict_Applicative_366)([  ]);
            };
            if (_570.length >= 1) {
                var _1441 = _570.slice(1);
                return Prelude["<*>"](__dict_Applicative_366["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_366["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_570[0]))(sequence(traversableArray)(__dict_Applicative_366)(_1441));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_365) {
        return function (_568) {
            return function (_569) {
                if (_569.length === 0) {
                    return Prelude.pure(__dict_Applicative_365)([  ]);
                };
                if (_569.length >= 1) {
                    var _1445 = _569.slice(1);
                    return Prelude["<*>"](__dict_Applicative_365["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_365["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_568(_569[0])))(traverse(traversableArray)(__dict_Applicative_365)(_568)(_1445));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var $$for = function (__dict_Applicative_376) {
        return function (__dict_Traversable_377) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_377)(__dict_Applicative_376)(f)(x);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        "for": $$for, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray
    };
})();
var PS = PS || {};
PS.Control_Monad_Free = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Coyoneda = PS.Data_Coyoneda;
    var Data_Either = PS.Data_Either;
    var Data_Inject = PS.Data_Inject;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Pure = (function () {
        function Pure(value0) {
            this.value0 = value0;
        };
        Pure.create = function (value0) {
            return new Pure(value0);
        };
        return Pure;
    })();
    var Free = (function () {
        function Free(value0) {
            this.value0 = value0;
        };
        Free.create = function (value0) {
            return new Free(value0);
        };
        return Free;
    })();
    var Gosub = (function () {
        function Gosub(value0) {
            this.value0 = value0;
        };
        Gosub.create = function (value0) {
            return new Gosub(value0);
        };
        return Gosub;
    })();
    var monadFree = function (__dict_Functor_513) {
        return new Prelude.Monad(function () {
            return applicativeFree(__dict_Functor_513);
        }, function () {
            return bindFree(__dict_Functor_513);
        });
    };
    var functorFree = function (__dict_Functor_528) {
        return new Prelude.Functor(function (_755) {
            return function (_756) {
                if (_756 instanceof Pure) {
                    return new Pure(_755(_756.value0));
                };
                return Prelude.liftA1(applicativeFree(__dict_Functor_528))(_755)(_756);
            };
        });
    };
    var bindFree = function (__dict_Functor_529) {
        return new Prelude.Bind(function (_757) {
            return function (_758) {
                if (_757 instanceof Gosub) {
                    return new Gosub(function (h) {
                        return _757.value0(function (a) {
                            return function (i) {
                                return h(a)(function (x) {
                                    return new Gosub(function (j) {
                                        return j(Prelude["const"](i(x)))(_758);
                                    });
                                });
                            };
                        });
                    });
                };
                return new Gosub(function (h) {
                    return h(Prelude["const"](_757))(_758);
                });
            };
        }, function () {
            return applyFree(__dict_Functor_529);
        });
    };
    var applyFree = function (__dict_Functor_530) {
        return new Prelude.Apply(Prelude.ap(monadFree(__dict_Functor_530)), function () {
            return functorFree(__dict_Functor_530);
        });
    };
    var applicativeFree = function (__dict_Functor_531) {
        return new Prelude.Applicative(function () {
            return applyFree(__dict_Functor_531);
        }, Pure.create);
    };
    var resumeGosub = function (__dict_Functor_508) {
        return function (_752) {
            if (_752 instanceof Gosub) {
                return _752.value0(function (a) {
                    return function (g) {
                        var _1453 = a(Prelude.unit);
                        if (_1453 instanceof Pure) {
                            return new Data_Either.Right(g(_1453.value0));
                        };
                        if (_1453 instanceof Free) {
                            return new Data_Either.Left(Prelude["<$>"](__dict_Functor_508)(function (h) {
                                return Prelude[">>="](bindFree(__dict_Functor_508))(h)(g);
                            })(_1453.value0));
                        };
                        if (_1453 instanceof Gosub) {
                            return new Data_Either.Right(_1453.value0(function (b) {
                                return function (i) {
                                    return Prelude[">>="](bindFree(__dict_Functor_508))(b(Prelude.unit))(function (x) {
                                        return Prelude[">>="](bindFree(__dict_Functor_508))(i(x))(g);
                                    });
                                };
                            }));
                        };
                        throw new Error("Failed pattern match");
                    };
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    var resume = function (__copy___dict_Functor_509) {
        return function (__copy_f) {
            var __dict_Functor_509 = __copy___dict_Functor_509;
            var f = __copy_f;
            tco: while (true) {
                if (f instanceof Pure) {
                    return new Data_Either.Right(f.value0);
                };
                if (f instanceof Free) {
                    return new Data_Either.Left(f.value0);
                };
                var _1461 = resumeGosub(__dict_Functor_509)(f);
                if (_1461 instanceof Data_Either.Left) {
                    return new Data_Either.Left(_1461.value0);
                };
                if (_1461 instanceof Data_Either.Right) {
                    var __tco___dict_Functor_509 = __dict_Functor_509;
                    __dict_Functor_509 = __tco___dict_Functor_509;
                    f = _1461.value0;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var go = function (__copy___dict_Functor_527) {
        return function (__copy_fn) {
            return function (__copy_f) {
                var __dict_Functor_527 = __copy___dict_Functor_527;
                var fn = __copy_fn;
                var f = __copy_f;
                tco: while (true) {
                    var _1464 = resume(__dict_Functor_527)(f);
                    if (_1464 instanceof Data_Either.Left) {
                        var __tco___dict_Functor_527 = __dict_Functor_527;
                        var __tco_fn = fn;
                        var __tco_f = fn(_1464.value0);
                        __dict_Functor_527 = __tco___dict_Functor_527;
                        fn = __tco_fn;
                        f = __tco_f;
                        continue tco;
                    };
                    if (_1464 instanceof Data_Either.Right) {
                        return _1464.value0;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        Pure: Pure, 
        Free: Free, 
        Gosub: Gosub, 
        go: go, 
        functorFree: functorFree, 
        applyFree: applyFree, 
        applicativeFree: applicativeFree, 
        bindFree: bindFree, 
        monadFree: monadFree
    };
})();
var PS = PS || {};
PS.Control_Monad_Trampoline = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var runTrampoline = Control_Monad_Free.go(Data_Lazy.functorLazy)(Data_Lazy.force);
    return {
        runTrampoline: runTrampoline
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Leaf = (function () {
        function Leaf() {

        };
        Leaf.value = new Leaf();
        return Leaf;
    })();
    var Two = (function () {
        function Two(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Two.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Two(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Two;
    })();
    var Three = (function () {
        function Three(value0, value1, value2, value3, value4, value5, value6) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
            this.value6 = value6;
        };
        Three.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return function (value6) {
                                    return new Three(value0, value1, value2, value3, value4, value5, value6);
                                };
                            };
                        };
                    };
                };
            };
        };
        return Three;
    })();
    var TwoLeft = (function () {
        function TwoLeft(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoLeft(value0, value1, value2);
                };
            };
        };
        return TwoLeft;
    })();
    var TwoRight = (function () {
        function TwoRight(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoRight(value0, value1, value2);
                };
            };
        };
        return TwoRight;
    })();
    var ThreeLeft = (function () {
        function ThreeLeft(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeLeft;
    })();
    var ThreeMiddle = (function () {
        function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeMiddle.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeMiddle;
    })();
    var ThreeRight = (function () {
        function ThreeRight(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeRight(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeRight;
    })();
    var KickUp = (function () {
        function KickUp(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        KickUp.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new KickUp(value0, value1, value2, value3);
                    };
                };
            };
        };
        return KickUp;
    })();
    var lookup = function (__copy___dict_Ord_654) {
        return function (__copy__817) {
            return function (__copy__818) {
                var __dict_Ord_654 = __copy___dict_Ord_654;
                var _817 = __copy__817;
                var _818 = __copy__818;
                tco: while (true) {
                    if (_818 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_818 instanceof Two && Prelude["=="](__dict_Ord_654["__superclass_Prelude.Eq_0"]())(_817)(_818.value1)) {
                        return new Data_Maybe.Just(_818.value2);
                    };
                    if (_818 instanceof Two && Prelude["<"](__dict_Ord_654)(_817)(_818.value1)) {
                        var __tco___dict_Ord_654 = __dict_Ord_654;
                        var __tco__817 = _817;
                        var __tco__818 = _818.value0;
                        __dict_Ord_654 = __tco___dict_Ord_654;
                        _817 = __tco__817;
                        _818 = __tco__818;
                        continue tco;
                    };
                    if (_818 instanceof Two) {
                        var __tco___dict_Ord_654 = __dict_Ord_654;
                        var __tco__817 = _817;
                        var __tco__818 = _818.value3;
                        __dict_Ord_654 = __tco___dict_Ord_654;
                        _817 = __tco__817;
                        _818 = __tco__818;
                        continue tco;
                    };
                    if (_818 instanceof Three && Prelude["=="](__dict_Ord_654["__superclass_Prelude.Eq_0"]())(_817)(_818.value1)) {
                        return new Data_Maybe.Just(_818.value2);
                    };
                    if (_818 instanceof Three && Prelude["=="](__dict_Ord_654["__superclass_Prelude.Eq_0"]())(_817)(_818.value4)) {
                        return new Data_Maybe.Just(_818.value5);
                    };
                    if (_818 instanceof Three && Prelude["<"](__dict_Ord_654)(_817)(_818.value1)) {
                        var __tco___dict_Ord_654 = __dict_Ord_654;
                        var __tco__817 = _817;
                        var __tco__818 = _818.value0;
                        __dict_Ord_654 = __tco___dict_Ord_654;
                        _817 = __tco__817;
                        _818 = __tco__818;
                        continue tco;
                    };
                    if (_818 instanceof Three && (Prelude["<"](__dict_Ord_654)(_818.value1)(_817) && Prelude["<="](__dict_Ord_654)(_817)(_818.value4))) {
                        var __tco___dict_Ord_654 = __dict_Ord_654;
                        var __tco__817 = _817;
                        var __tco__818 = _818.value3;
                        __dict_Ord_654 = __tco___dict_Ord_654;
                        _817 = __tco__817;
                        _818 = __tco__818;
                        continue tco;
                    };
                    if (_818 instanceof Three) {
                        var __tco___dict_Ord_654 = __dict_Ord_654;
                        var __tco__817 = _817;
                        var __tco__818 = _818.value6;
                        __dict_Ord_654 = __tco___dict_Ord_654;
                        _817 = __tco__817;
                        _818 = __tco__818;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var keys = function (_822) {
        if (_822 instanceof Leaf) {
            return [  ];
        };
        if (_822 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_822.value0))(Prelude["++"](Data_Array.semigroupArray)([ _822.value1 ])(keys(_822.value3)));
        };
        if (_822 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_822.value0))(Prelude["++"](Data_Array.semigroupArray)([ _822.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_822.value3))(Prelude["++"](Data_Array.semigroupArray)([ _822.value4 ])(keys(_822.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var fromZipper = function (__copy___dict_Ord_656) {
        return function (__copy__819) {
            return function (__copy__820) {
                var __dict_Ord_656 = __copy___dict_Ord_656;
                var _819 = __copy__819;
                var _820 = __copy__820;
                tco: while (true) {
                    if (_819.length === 0) {
                        return _820;
                    };
                    if (_819.length >= 1) {
                        var _1534 = _819.slice(1);
                        if (_819[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_656 = __dict_Ord_656;
                            var __tco__820 = new Two(_820, (_819[0]).value0, (_819[0]).value1, (_819[0]).value2);
                            __dict_Ord_656 = __tco___dict_Ord_656;
                            _819 = _1534;
                            _820 = __tco__820;
                            continue tco;
                        };
                    };
                    if (_819.length >= 1) {
                        var _1539 = _819.slice(1);
                        if (_819[0] instanceof TwoRight) {
                            var __tco___dict_Ord_656 = __dict_Ord_656;
                            var __tco__820 = new Two((_819[0]).value0, (_819[0]).value1, (_819[0]).value2, _820);
                            __dict_Ord_656 = __tco___dict_Ord_656;
                            _819 = _1539;
                            _820 = __tco__820;
                            continue tco;
                        };
                    };
                    if (_819.length >= 1) {
                        var _1547 = _819.slice(1);
                        if (_819[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_656 = __dict_Ord_656;
                            var __tco__820 = new Three(_820, (_819[0]).value0, (_819[0]).value1, (_819[0]).value2, (_819[0]).value3, (_819[0]).value4, (_819[0]).value5);
                            __dict_Ord_656 = __tco___dict_Ord_656;
                            _819 = _1547;
                            _820 = __tco__820;
                            continue tco;
                        };
                    };
                    if (_819.length >= 1) {
                        var _1555 = _819.slice(1);
                        if (_819[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_656 = __dict_Ord_656;
                            var __tco__820 = new Three((_819[0]).value0, (_819[0]).value1, (_819[0]).value2, _820, (_819[0]).value3, (_819[0]).value4, (_819[0]).value5);
                            __dict_Ord_656 = __tco___dict_Ord_656;
                            _819 = _1555;
                            _820 = __tco__820;
                            continue tco;
                        };
                    };
                    if (_819.length >= 1) {
                        var _1563 = _819.slice(1);
                        if (_819[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_656 = __dict_Ord_656;
                            var __tco__820 = new Three((_819[0]).value0, (_819[0]).value1, (_819[0]).value2, (_819[0]).value3, (_819[0]).value4, (_819[0]).value5, _820);
                            __dict_Ord_656 = __tco___dict_Ord_656;
                            _819 = _1563;
                            _820 = __tco__820;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_657) {
        var up = function (__copy___dict_Ord_658) {
            return function (__copy__831) {
                return function (__copy__832) {
                    var __dict_Ord_658 = __copy___dict_Ord_658;
                    var _831 = __copy__831;
                    var _832 = __copy__832;
                    tco: while (true) {
                        if (_831.length === 0) {
                            return new Two(_832.value0, _832.value1, _832.value2, _832.value3);
                        };
                        if (_831.length >= 1) {
                            var _1578 = _831.slice(1);
                            if (_831[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_658)(_1578)(new Three(_832.value0, _832.value1, _832.value2, _832.value3, (_831[0]).value0, (_831[0]).value1, (_831[0]).value2));
                            };
                        };
                        if (_831.length >= 1) {
                            var _1587 = _831.slice(1);
                            if (_831[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_658)(_1587)(new Three((_831[0]).value0, (_831[0]).value1, (_831[0]).value2, _832.value0, _832.value1, _832.value2, _832.value3));
                            };
                        };
                        if (_831.length >= 1) {
                            var _1599 = _831.slice(1);
                            if (_831[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_658 = __dict_Ord_658;
                                var __tco__832 = new KickUp(new Two(_832.value0, _832.value1, _832.value2, _832.value3), (_831[0]).value0, (_831[0]).value1, new Two((_831[0]).value2, (_831[0]).value3, (_831[0]).value4, (_831[0]).value5));
                                __dict_Ord_658 = __tco___dict_Ord_658;
                                _831 = _1599;
                                _832 = __tco__832;
                                continue tco;
                            };
                        };
                        if (_831.length >= 1) {
                            var _1611 = _831.slice(1);
                            if (_831[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_658 = __dict_Ord_658;
                                var __tco__832 = new KickUp(new Two((_831[0]).value0, (_831[0]).value1, (_831[0]).value2, _832.value0), _832.value1, _832.value2, new Two(_832.value3, (_831[0]).value3, (_831[0]).value4, (_831[0]).value5));
                                __dict_Ord_658 = __tco___dict_Ord_658;
                                _831 = _1611;
                                _832 = __tco__832;
                                continue tco;
                            };
                        };
                        if (_831.length >= 1) {
                            var _1623 = _831.slice(1);
                            if (_831[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_658 = __dict_Ord_658;
                                var __tco__832 = new KickUp(new Two((_831[0]).value0, (_831[0]).value1, (_831[0]).value2, (_831[0]).value3), (_831[0]).value4, (_831[0]).value5, new Two(_832.value0, _832.value1, _832.value2, _832.value3));
                                __dict_Ord_658 = __tco___dict_Ord_658;
                                _831 = _1623;
                                _832 = __tco__832;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_659) {
            return function (__copy__827) {
                return function (__copy__828) {
                    return function (__copy__829) {
                        return function (__copy__830) {
                            var __dict_Ord_659 = __copy___dict_Ord_659;
                            var _827 = __copy__827;
                            var _828 = __copy__828;
                            var _829 = __copy__829;
                            var _830 = __copy__830;
                            tco: while (true) {
                                if (_830 instanceof Leaf) {
                                    return up(__dict_Ord_659)(_827)(new KickUp(Leaf.value, _828, _829, Leaf.value));
                                };
                                if (_830 instanceof Two && Prelude["=="](__dict_Ord_659["__superclass_Prelude.Eq_0"]())(_828)(_830.value1)) {
                                    return fromZipper(__dict_Ord_659)(_827)(new Two(_830.value0, _828, _829, _830.value3));
                                };
                                if (_830 instanceof Two && Prelude["<"](__dict_Ord_659)(_828)(_830.value1)) {
                                    var __tco___dict_Ord_659 = __dict_Ord_659;
                                    var __tco__827 = Prelude[":"](new TwoLeft(_830.value1, _830.value2, _830.value3))(_827);
                                    var __tco__828 = _828;
                                    var __tco__829 = _829;
                                    var __tco__830 = _830.value0;
                                    __dict_Ord_659 = __tco___dict_Ord_659;
                                    _827 = __tco__827;
                                    _828 = __tco__828;
                                    _829 = __tco__829;
                                    _830 = __tco__830;
                                    continue tco;
                                };
                                if (_830 instanceof Two) {
                                    var __tco___dict_Ord_659 = __dict_Ord_659;
                                    var __tco__827 = Prelude[":"](new TwoRight(_830.value0, _830.value1, _830.value2))(_827);
                                    var __tco__828 = _828;
                                    var __tco__829 = _829;
                                    var __tco__830 = _830.value3;
                                    __dict_Ord_659 = __tco___dict_Ord_659;
                                    _827 = __tco__827;
                                    _828 = __tco__828;
                                    _829 = __tco__829;
                                    _830 = __tco__830;
                                    continue tco;
                                };
                                if (_830 instanceof Three && Prelude["=="](__dict_Ord_659["__superclass_Prelude.Eq_0"]())(_828)(_830.value1)) {
                                    return fromZipper(__dict_Ord_659)(_827)(new Three(_830.value0, _828, _829, _830.value3, _830.value4, _830.value5, _830.value6));
                                };
                                if (_830 instanceof Three && Prelude["=="](__dict_Ord_659["__superclass_Prelude.Eq_0"]())(_828)(_830.value4)) {
                                    return fromZipper(__dict_Ord_659)(_827)(new Three(_830.value0, _830.value1, _830.value2, _830.value3, _828, _829, _830.value6));
                                };
                                if (_830 instanceof Three && Prelude["<"](__dict_Ord_659)(_828)(_830.value1)) {
                                    var __tco___dict_Ord_659 = __dict_Ord_659;
                                    var __tco__827 = Prelude[":"](new ThreeLeft(_830.value1, _830.value2, _830.value3, _830.value4, _830.value5, _830.value6))(_827);
                                    var __tco__828 = _828;
                                    var __tco__829 = _829;
                                    var __tco__830 = _830.value0;
                                    __dict_Ord_659 = __tco___dict_Ord_659;
                                    _827 = __tco__827;
                                    _828 = __tco__828;
                                    _829 = __tco__829;
                                    _830 = __tco__830;
                                    continue tco;
                                };
                                if (_830 instanceof Three && (Prelude["<"](__dict_Ord_659)(_830.value1)(_828) && Prelude["<="](__dict_Ord_659)(_828)(_830.value4))) {
                                    var __tco___dict_Ord_659 = __dict_Ord_659;
                                    var __tco__827 = Prelude[":"](new ThreeMiddle(_830.value0, _830.value1, _830.value2, _830.value4, _830.value5, _830.value6))(_827);
                                    var __tco__828 = _828;
                                    var __tco__829 = _829;
                                    var __tco__830 = _830.value3;
                                    __dict_Ord_659 = __tco___dict_Ord_659;
                                    _827 = __tco__827;
                                    _828 = __tco__828;
                                    _829 = __tco__829;
                                    _830 = __tco__830;
                                    continue tco;
                                };
                                if (_830 instanceof Three) {
                                    var __tco___dict_Ord_659 = __dict_Ord_659;
                                    var __tco__827 = Prelude[":"](new ThreeRight(_830.value0, _830.value1, _830.value2, _830.value3, _830.value4, _830.value5))(_827);
                                    var __tco__828 = _828;
                                    var __tco__829 = _829;
                                    var __tco__830 = _830.value6;
                                    __dict_Ord_659 = __tco___dict_Ord_659;
                                    _827 = __tco__827;
                                    _828 = __tco__828;
                                    _829 = __tco__829;
                                    _830 = __tco__830;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_657)([  ]);
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_663) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_813) {
                return insert(__dict_Ord_663)(_813.value0)(_813.value1)(m);
            };
        })(empty);
    };
    return {
        keys: keys, 
        fromList: fromList, 
        lookup: lookup, 
        insert: insert, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Data_StrMap = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap_ST = PS.Data_StrMap_ST;
    var Data_Monoid_All = PS.Data_Monoid_All;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Array = PS.Data_Array;
    
  function runST(f) {
    return f;
  }
  ;
    
  function all(f) {
    return function(m) {
      for (var k in m) {
        if (!f(k)(m[k])) return false;
      }
      return true;
    };
  }
  ;
    
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  ;
    
  function _collect(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        r.push(f(k)(m[k]));
      }
      return r;
    };
  }
  ;
    
  var keys = Object.keys || _collect(function(k) {
    return function() { return k; };
  });
  ;
    var toList = _collect(Data_Tuple.Tuple.create);
    var pureST = function (f) {
        return Control_Monad_Eff.runPure(runST(f));
    };
    var lookup = Data_Function.runFn4(_lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var isEmpty = all(function (_862) {
        return function (_861) {
            return false;
        };
    });
    var fromList = function (l) {
        return pureST(function __do() {
            var _35 = Data_StrMap_ST["new"]();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(l)(function (_863) {
                return Data_StrMap_ST.poke(_35)(_863.value0)(_863.value1);
            })();
            return _35;
        });
    };
    return {
        runST: runST, 
        all: all, 
        keys: keys, 
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        isEmpty: isEmpty
    };
})();
var PS = PS || {};
PS.Data_Date = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Enum = PS.Data_Enum;
    var Global = PS.Global;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Maybe = PS.Data_Maybe;
    function jsDateMethod(method) {   return function(date) {     return date[method]();   }; };
    function jsDateConstructor(x) {   return new Date(x); };
    var DateTime = (function () {
        function DateTime(value0) {
            this.value0 = value0;
        };
        DateTime.create = function (value0) {
            return new DateTime(value0);
        };
        return DateTime;
    })();
    var liftDate = function (_971) {
        return function (_972) {
            return _971(_972.value0);
        };
    };
    var showDate = new Prelude.Show(liftDate(jsDateMethod("toString")));
    var fromJSDate = function (d) {
        var _1687 = Global.isNaN(jsDateMethod("getTime")(d));
        if (_1687) {
            return Data_Maybe.Nothing.value;
        };
        if (!_1687) {
            return Data_Maybe.Just.create(new DateTime(d));
        };
        throw new Error("Failed pattern match");
    };
    var fromString = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
    return {
        fromString: fromString, 
        fromJSDate: fromJSDate, 
        showDate: showDate
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Core = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_StrMap = PS.Data_StrMap;
    var Optic_Prism = PS.Optic_Prism;
    var Optic_Fold = PS.Optic_Fold;
    var Optic_Core = PS.Optic_Core;
    var Optic_Extended = PS.Optic_Extended;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    function fromNull(_){return null;};
    function fromBoolean(b){return b;};
    function fromNumber(n){return n;};
    function fromString(s){return s;};
    function fromArray(a){return a;};
    function fromObject(o){return o;};
    var jsonNull = null;;
    function _stringify(j){ return JSON.stringify(j); };
    function _foldJson(isNull, isBool, isNum, isStr, isArr, isObj, j) {   if (j == null) return isNull(null);                                else if (typeof j === 'boolean') return isBool(j);                 else if (typeof j === 'number') return isNum(j);                   else if (typeof j === 'string') return isStr(j);                   else if (Object.prototype.toString.call(j) === '[object Array]') return isArr(j);    else return isObj(j);                                           };
    var verbJsonType = function (def) {
        return function (f) {
            return function (fold) {
                return fold(def)(f);
            };
        };
    };
    
    /**
     *  Decoding
     */
    var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var showJsonNull = new Prelude.Show(Prelude["const"]("null"));
    var showJson = new Prelude.Show(_stringify);
    var foldJsonObject = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
            };
        };
    };
    var toObject = toJsonType(foldJsonObject);
    
    /**
     *  Folds
     */
    var foldJson = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (json) {
                                return _foldJson(a, b, c, d, e, f, json);
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        toObject: toObject, 
        jsonNull: jsonNull, 
        fromString: fromString, 
        fromObject: fromObject, 
        fromNumber: fromNumber, 
        fromNull: fromNull, 
        fromBoolean: fromBoolean, 
        fromArray: fromArray, 
        foldJsonObject: foldJsonObject, 
        foldJson: foldJson, 
        showJson: showJson, 
        showJsonNull: showJsonNull
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Parser = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Either = PS.Data_Either;
    function _jsonParser(fail, succ, s) {   try { return succ(JSON.parse(s)); } catch (e) { return fail(e.message); }};
    var jsonParser = function (j) {
        return _jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
    };
    return {
        jsonParser: jsonParser
    };
})();
var PS = PS || {};
PS.Data_Argonaut_JCursor = (function () {
    "use strict";
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Prelude = PS.Prelude;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Combinators = PS.Data_Argonaut_Combinators;
    var Data_Monoid = PS.Data_Monoid;
    var Data_String = PS.Data_String;
    var Data_Either = PS.Data_Either;
    var jsonNull0 = null;;
    var JsonPrim = function (x) {
        return x;
    };
    var JCursorTop = (function () {
        function JCursorTop() {

        };
        JCursorTop.value = new JCursorTop();
        return JCursorTop;
    })();
    var JField = (function () {
        function JField(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        JField.create = function (value0) {
            return function (value1) {
                return new JField(value0, value1);
            };
        };
        return JField;
    })();
    var JIndex = (function () {
        function JIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        JIndex.create = function (value0) {
            return function (value1) {
                return new JIndex(value0, value1);
            };
        };
        return JIndex;
    })();
    var showJCursor = new Prelude.Show(function (_1120) {
        if (_1120 instanceof JCursorTop) {
            return "";
        };
        if (_1120 instanceof JField) {
            return "." + (_1120.value0 + Prelude.show(showJCursor)(_1120.value1));
        };
        if (_1120 instanceof JIndex) {
            return "[" + (Prelude.show(Prelude.showNumber)(_1120.value0) + ("]" + Prelude.show(showJCursor)(_1120.value1)));
        };
        throw new Error("Failed pattern match");
    });
    var runJsonPrim = function (_1108) {
        return _1108;
    };
    var showJsonPrim = new Prelude.Show(function (p) {
        return runJsonPrim(p)(Prelude.show(Data_Argonaut_Core.showJsonNull))(Prelude.show(Prelude.showBoolean))(Prelude.show(Prelude.showNumber))(Prelude.show(Prelude.showString));
    });
    var primToJson = function (p) {
        return runJsonPrim(p)(Data_Argonaut_Core.fromNull)(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString);
    };
    var primStr = function (v) {
        return function (_1107) {
            return function (_1106) {
                return function (_1105) {
                    return function (f) {
                        return f(v);
                    };
                };
            };
        };
    };
    var primNum = function (v) {
        return function (_1104) {
            return function (_1103) {
                return function (f) {
                    return function (_1102) {
                        return f(v);
                    };
                };
            };
        };
    };
    var primNull = function (f) {
        return function (_1098) {
            return function (_1097) {
                return function (_1096) {
                    return f(jsonNull0);
                };
            };
        };
    };
    var primBool = function (v) {
        return function (_1101) {
            return function (f) {
                return function (_1100) {
                    return function (_1099) {
                        return f(v);
                    };
                };
            };
        };
    };
    var downIndex = function (i) {
        var downIndex$prime = function (_1115) {
            if (_1115 instanceof JCursorTop) {
                return new JIndex(i, JCursorTop.value);
            };
            if (_1115 instanceof JField) {
                return new JField(_1115.value0, downIndex$prime(_1115.value1));
            };
            if (_1115 instanceof JIndex) {
                return new JIndex(_1115.value0, downIndex$prime(_1115.value1));
            };
            throw new Error("Failed pattern match");
        };
        return downIndex$prime;
    };
    var downField = function (i) {
        var downField$prime = function (_1114) {
            if (_1114 instanceof JCursorTop) {
                return new JField(i, JCursorTop.value);
            };
            if (_1114 instanceof JField) {
                return new JField(_1114.value0, downField$prime(_1114.value1));
            };
            if (_1114 instanceof JIndex) {
                return new JIndex(_1114.value0, downField$prime(_1114.value1));
            };
            throw new Error("Failed pattern match");
        };
        return downField$prime;
    };
    return {
        JsonPrim: JsonPrim, 
        JCursorTop: JCursorTop, 
        JField: JField, 
        JIndex: JIndex, 
        runJsonPrim: runJsonPrim, 
        primToJson: primToJson, 
        primStr: primStr, 
        primNum: primNum, 
        primBool: primBool, 
        primNull: primNull, 
        downIndex: downIndex, 
        downField: downField, 
        showJCursor: showJCursor, 
        showJsonPrim: showJsonPrim
    };
})();
var PS = PS || {};
PS.Data_Argonaut = (function () {
    "use strict";
    var Data_Argonaut_Combinators = PS.Data_Argonaut_Combinators;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    var Data_Argonaut_Printer = PS.Data_Argonaut_Printer;
    var Prelude = PS.Prelude;
    var fromObject = Data_Argonaut_Core.fromObject;
    var fromNumber = Data_Argonaut_Core.fromNumber;
    var fromBoolean = Data_Argonaut_Core.fromBoolean;
    var fromArray = Data_Argonaut_Core.fromArray;
    return {
        fromObject: fromObject, 
        fromArray: fromArray, 
        fromNumber: fromNumber, 
        fromBoolean: fromBoolean
    };
})();
var PS = PS || {};
PS.Data_Json_JSemantic = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String_Regex = PS.Data_String_Regex;
    var $$Math = PS.$$Math;
    var Data_Date = PS.Data_Date;
    var Data_String = PS.Data_String;
    var Control_Alt = PS.Control_Alt;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var _s2n = function (Just) { return function(Nothing) {
  return function (s) { 
    var n = s * 1; if (isNaN(n)) {return Nothing} else {return Just(n)} 
}}};
    var Integral = (function () {
        function Integral(value0) {
            this.value0 = value0;
        };
        Integral.create = function (value0) {
            return new Integral(value0);
        };
        return Integral;
    })();
    var Fractional = (function () {
        function Fractional(value0) {
            this.value0 = value0;
        };
        Fractional.create = function (value0) {
            return new Fractional(value0);
        };
        return Fractional;
    })();
    var $$Date = (function () {
        function Date(value0) {
            this.value0 = value0;
        };
        Date.create = function (value0) {
            return new Date(value0);
        };
        return Date;
    })();
    var DateTime = (function () {
        function DateTime(value0) {
            this.value0 = value0;
        };
        DateTime.create = function (value0) {
            return new DateTime(value0);
        };
        return DateTime;
    })();
    var Time = (function () {
        function Time(value0) {
            this.value0 = value0;
        };
        Time.create = function (value0) {
            return new Time(value0);
        };
        return Time;
    })();
    var Interval = (function () {
        function Interval(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Interval.create = function (value0) {
            return function (value1) {
                return new Interval(value0, value1);
            };
        };
        return Interval;
    })();
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var Bool = (function () {
        function Bool(value0) {
            this.value0 = value0;
        };
        Bool.create = function (value0) {
            return new Bool(value0);
        };
        return Bool;
    })();
    var Percent = (function () {
        function Percent(value0) {
            this.value0 = value0;
        };
        Percent.create = function (value0) {
            return new Percent(value0);
        };
        return Percent;
    })();
    var Currency = (function () {
        function Currency(value0) {
            this.value0 = value0;
        };
        Currency.create = function (value0) {
            return new Currency(value0);
        };
        return Currency;
    })();
    var NA = (function () {
        function NA() {

        };
        NA.value = new NA();
        return NA;
    })();
    var s2n = _s2n(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
    var rx = function (s) {
        return Data_String_Regex.regex(s)(Data_String_Regex.noFlags);
    };
    var rg = function (s) {
        return Data_String_Regex.regex(s)(Data_String_Regex.parseFlags("g"));
    };
    var parseX = function (regexp) {
        return function (parser) {
            return function (constr) {
                return function (s) {
                    var _1716 = Data_String_Regex.match(regexp)(s);
                    if (_1716 instanceof Data_Maybe.Just && _1716.value0.length >= 2) {
                        var _1720 = _1716.value0.slice(2);
                        return Prelude["<$>"](Data_Maybe.functorMaybe)(constr)(parser(_1716.value0[1]));
                    };
                    return Data_Maybe.Nothing.value;
                };
            };
        };
    };
    var parsePercent = function (r) {
        return parseX(r)(s2n)(Percent.create);
    };
    var parseInterval = function (r) {
        return function (s) {
            var _1721 = Data_String.split(" - ")(s);
            if (_1721.length >= 2) {
                var _1724 = _1721.slice(2);
                if (_1724.length === 0 && (Data_String_Regex.test(r)(_1721[0]) && Data_String_Regex.test(r)(_1721[1]))) {
                    return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Interval.create)(Data_Date.fromString(_1721[0])))(Data_Date.fromString(_1721[1]));
                };
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var parseDateTime = function (r) {
        return parseX(r)(Data_Date.fromString)(DateTime.create);
    };
    var parseCurrency = function (r) {
        return parseX(r)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_String_Regex.replace(rg(","))(""))(s2n))(Currency.create);
    };
    
    /**
     *  source: http://www.fileformat.info/info/unicode/category/Sc/list.htm
     */
    var currency_symbols = "[\\$\\u20A0-\\u20CF\\u00A2\\u00A3\\u00A4\\u00A5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6]";
    var jSemanticOptsDefault = {
        regexps: {
            percent: rx("^(-?\\d+(\\.\\d+)?)\\%$"), 
            currency: rx("^" + (currency_symbols + "?(([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(.[0-9][0-9])?)$")), 
            date: rx("^((\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})Z?[+-](\\d{2})\\:(\\d{2}))$")
        }
    };
    
    /**
     *  analyzeStr :: {regexps} -> String -> JSemantic
     */
    var analyzeStr = function (rs) {
        return function (s) {
            return Data_Maybe.fromMaybe(new Text(s))(Control_Alt["<|>"](Data_Maybe.altMaybe)(Control_Alt["<|>"](Data_Maybe.altMaybe)(Control_Alt["<|>"](Data_Maybe.altMaybe)(parsePercent(rs.percent)(s))(parseCurrency(rs.currency)(s)))(parseDateTime(rs.date)(s)))(parseInterval(rs.date)(s)));
        };
    };
    var analyzeNum = function (_1129) {
        if ($$Math.floor(_1129) === _1129) {
            return new Integral(_1129);
        };
        return new Fractional(_1129);
    };
    
    /**
     *  TODO: date, time
     */
    var toSemantic = function (o) {
        return function (p) {
            return Data_Argonaut_JCursor.runJsonPrim(p)(Prelude["const"](NA.value))(Bool.create)(analyzeNum)(analyzeStr(o.regexps));
        };
    };
    var toSemanticDef = toSemantic(jSemanticOptsDefault);
    return {
        Integral: Integral, 
        Fractional: Fractional, 
        "Date": $$Date, 
        DateTime: DateTime, 
        Time: Time, 
        Interval: Interval, 
        Text: Text, 
        Bool: Bool, 
        Percent: Percent, 
        Currency: Currency, 
        NA: NA, 
        jSemanticOptsDefault: jSemanticOptsDefault, 
        toSemanticDef: toSemanticDef, 
        toSemantic: toSemantic
    };
})();
var PS = PS || {};
PS.Text_Smolder_Markup = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var Attr = (function () {
        function Attr(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Attr.create = function (value0) {
            return function (value1) {
                return new Attr(value0, value1);
            };
        };
        return Attr;
    })();
    var Attribute = (function () {
        function Attribute(value0) {
            this.value0 = value0;
        };
        Attribute.create = function (value0) {
            return new Attribute(value0);
        };
        return Attribute;
    })();
    var Element = (function () {
        function Element(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Element(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Element;
    })();
    var Content = (function () {
        function Content(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Content.create = function (value0) {
            return function (value1) {
                return new Content(value0, value1);
            };
        };
        return Content;
    })();
    var Return = (function () {
        function Return(value0) {
            this.value0 = value0;
        };
        Return.create = function (value0) {
            return new Return(value0);
        };
        return Return;
    })();
    var Attributable = function ($bang) {
        this["!"] = $bang;
    };
    var $bang = function (dict) {
        return dict["!"];
    };
    var text = function (s) {
        return new Content(s, new Return(Prelude.unit));
    };
    var parent = function (el) {
        return function (kids) {
            return new Element(el, new Data_Maybe.Just(kids), [  ], new Return(Prelude.unit));
        };
    };
    var leaf = function (el) {
        return new Element(el, Data_Maybe.Nothing.value, [  ], new Return(Prelude.unit));
    };
    var functorMarkupM = new Prelude.Functor(function (_1133) {
        return function (_1134) {
            if (_1134 instanceof Element) {
                return new Element(_1134.value0, _1134.value1, _1134.value2, Prelude["<$>"](functorMarkupM)(_1133)(_1134.value3));
            };
            if (_1134 instanceof Content) {
                return new Content(_1134.value0, Prelude["<$>"](functorMarkupM)(_1133)(_1134.value1));
            };
            if (_1134 instanceof Return) {
                return new Return(_1133(_1134.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var attribute = function (key) {
        return function (value) {
            return new Attribute([ new Attr(key, value) ]);
        };
    };
    var attributableMarkupM = new Attributable(function (_1139) {
        return function (_1140) {
            if (_1139 instanceof Element) {
                return new Element(_1139.value0, _1139.value1, Prelude["<>"](Data_Array.semigroupArray)(_1139.value2)(_1140.value0), _1139.value3);
            };
            throw new Error("Failed pattern match");
        };
    });
    var attributableMarkupMF = new Attributable(function (k) {
        return function (xs) {
            return function (m) {
                return $bang(attributableMarkupM)(k(m))(xs);
            };
        };
    });
    var monadMarkupM = new Prelude.Monad(function () {
        return applicativeMarkupM;
    }, function () {
        return bindMarkupM;
    });
    var bindMarkupM = new Prelude.Bind(function (_1135) {
        return function (_1136) {
            if (_1135 instanceof Element) {
                return new Element(_1135.value0, _1135.value1, _1135.value2, Prelude[">>="](bindMarkupM)(_1135.value3)(_1136));
            };
            if (_1135 instanceof Content) {
                return new Content(_1135.value0, Prelude[">>="](bindMarkupM)(_1135.value1)(_1136));
            };
            if (_1135 instanceof Return) {
                return _1136(_1135.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMarkupM;
    });
    var applyMarkupM = new Prelude.Apply(Prelude.ap(monadMarkupM), function () {
        return functorMarkupM;
    });
    var applicativeMarkupM = new Prelude.Applicative(function () {
        return applyMarkupM;
    }, Return.create);
    var semigroupMarkupM = new Prelude.Semigroup(function (x) {
        return function (y) {
            return Control_Apply["*>"](applyMarkupM)(x)(y);
        };
    });
    var monoidMarkup = new Data_Monoid.Monoid(function () {
        return semigroupMarkupM;
    }, new Return(Prelude.unit));
    return {
        Attr: Attr, 
        Element: Element, 
        Content: Content, 
        Return: Return, 
        Attributable: Attributable, 
        "!": $bang, 
        attribute: attribute, 
        text: text, 
        leaf: leaf, 
        parent: parent, 
        semigroupMarkupM: semigroupMarkupM, 
        monoidMarkup: monoidMarkup, 
        functorMarkupM: functorMarkupM, 
        applyMarkupM: applyMarkupM, 
        applicativeMarkupM: applicativeMarkupM, 
        bindMarkupM: bindMarkupM, 
        monadMarkupM: monadMarkupM, 
        attributableMarkupM: attributableMarkupM, 
        attributableMarkupMF: attributableMarkupMF
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Prelude = PS.Prelude;
    var tr = Text_Smolder_Markup.parent("tr");
    var thead = Text_Smolder_Markup.parent("thead");
    var th = Text_Smolder_Markup.parent("th");
    var td = Text_Smolder_Markup.parent("td");
    var tbody = Text_Smolder_Markup.parent("tbody");
    var table = Text_Smolder_Markup.parent("table");
    var span = Text_Smolder_Markup.parent("span");
    var small = Text_Smolder_Markup.parent("small");
    var br = Text_Smolder_Markup.leaf("br");
    return {
        br: br, 
        tr: tr, 
        thead: thead, 
        th: th, 
        td: td, 
        tbody: tbody, 
        table: table, 
        span: span, 
        small: small
    };
})();
var PS = PS || {};
PS.Data_Json_JTable_Internal = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Foldable = PS.Data_Foldable;
    var $$Math = PS.$$Math;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Maybe = PS.Data_Maybe;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Data_Either = PS.Data_Either;
    var Control_Bind = PS.Control_Bind;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    
    /**
     *  header data
     */
    var T = (function () {
        function T(value0, value1, value2, value3, value4) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
        };
        T.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return new T(value0, value1, value2, value3, value4);
                        };
                    };
                };
            };
        };
        return T;
    })();
    
    /**
     *  cell data
     */
    var C = (function () {
        function C(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        C.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new C(value0, value1, value2, value3);
                    };
                };
            };
        };
        return C;
    })();
    var zipWithIndex = function (xs) {
        return Data_Tuple.zip(xs)(Data_Array[".."](0)(Data_Array.length(xs) - 1));
    };
    var tWidth = function (_1153) {
        return _1153.value2;
    };
    var tLabel = function (_1151) {
        return _1151.value0;
    };
    
    /**
     *  add child to tree, unify if exists
     */
    var tMergeArray = function (_1160) {
        return function (_1161) {
            var i = Data_Array.findIndex(Prelude[">>>"](Prelude.semigroupoidArr)(tLabel)(function (_0) {
                return _0 === _1161.value0;
            }))(_1160.value4);
            var _1765 = Data_Array["!!"](_1160.value4)(i);
            if (_1765 instanceof Data_Maybe.Just) {
                var _1766 = Data_Foldable.foldl(Data_Foldable.foldableArray)(tMergeArray)(_1765.value0)(_1161.value4);
                var h$prime = $$Math.max(_1160.value3)(_1766.value3 + 1);
                var cw$prime$prime = $$Math.max(_1766.value2)((function () {
                    var _1767 = Data_Array["null"](_1161.value4) && !Data_Array["null"](_1766.value4);
                    if (_1767) {
                        return 1;
                    };
                    if (!_1767) {
                        return _1161.value2;
                    };
                    throw new Error("Failed pattern match");
                })());
                var k$prime = Data_Array.updateAt(i)(new T(_1765.value0.value0, _1765.value0.value1, cw$prime$prime, _1766.value3, _1766.value4))(_1160.value4);
                var w$prime = (_1160.value2 - _1765.value0.value2) + cw$prime$prime;
                return new T(_1160.value0, _1160.value1, w$prime, h$prime, k$prime);
            };
            if (_1765 instanceof Data_Maybe.Nothing) {
                var w$prime = (function () {
                    var _1779 = Data_Array["null"](_1160.value4);
                    if (_1779) {
                        return _1161.value2;
                    };
                    if (!_1779) {
                        return _1160.value2 + _1161.value2;
                    };
                    throw new Error("Failed pattern match");
                })();
                var k$prime = Data_Array.snoc(_1160.value4)(_1161);
                var h$prime = $$Math.max(_1160.value3)(_1161.value3 + 1);
                return new T(_1160.value0, _1160.value1, w$prime, h$prime, k$prime);
            };
            throw new Error("Failed pattern match");
        };
    };
    var tKids = function (_1155) {
        return _1155.value4;
    };
    
    /**
     *  produce header rows from header tree
     */
    var tsToRows = function (ts) {
        var _1796 = Data_Array["null"](ts);
        if (_1796) {
            return [  ];
        };
        if (!_1796) {
            return Prelude[":"](ts)(tsToRows(Prelude[">>="](Data_Array.bindArray)(ts)(tKids)));
        };
        throw new Error("Failed pattern match");
    };
    var tHeight = function (_1154) {
        return _1154.value3;
    };
    var strcmp = function (s1) {
        return function (s2) {
            return Prelude.compare(Prelude.ordNumber)(Data_String.localeCompare(s1)(s2))(0);
        };
    };
    
    /**
     *  sort header tree by ColumnOrdering
     */
    var sortTree = function (_1172) {
        return function (_1173) {
            return T.create(_1173.value0)(_1173.value1)(_1173.value2)(_1173.value3)(Data_Array.sortBy(function (_1150) {
                return function (_1149) {
                    return _1172(_1150.value0)(_1150.value1)(_1149.value0)(_1149.value1);
                };
            })(Prelude["<#>"](Data_Array.functorArray)(_1173.value4)(sortTree(_1172))));
        };
    };
    
    /**
     *  render a grid from an array of arrays
     */
    var renderRows = function (tr$prime) {
        return function (cellf) {
            return function (rows) {
                return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)(Prelude[">>="](Data_Array.bindArray)(zipWithIndex(rows))(function (_47) {
                    return Prelude["return"](Data_Array.monadArray)(tr$prime(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)(Prelude[">>="](Data_Array.bindArray)(zipWithIndex(_47.value0))(function (_46) {
                        return Prelude["return"](Data_Array.monadArray)(cellf(_47.value1)(_46.value1)(_46.value0));
                    }))));
                }));
            };
        };
    };
    
    /**
     *  pad tall header cells from above
     */
    var padTree = function (_1174) {
        return function (_1175) {
            var _1830 = !Data_Array["null"](_1175.value4);
            if (_1830) {
                return new T(_1175.value0, _1175.value1, _1175.value2, _1175.value3, Prelude["<#>"](Data_Array.functorArray)(_1175.value4)(padTree(_1174 - 1)));
            };
            if (!_1830) {
                var _1831 = _1174 > 0;
                if (_1831) {
                    return new T("", _1175.value1, _1175.value2, 1, [ padTree(_1174 - 1)(_1175) ]);
                };
                if (!_1831) {
                    return new T(_1175.value0, _1175.value1, _1175.value2, 1, _1175.value4);
                };
                throw new Error("Failed pattern match");
            };
            throw new Error("Failed pattern match");
        };
    };
    var foldJsonP = function (f) {
        return Data_Argonaut_Core.foldJson(function (_1141) {
            return f(Data_Argonaut_JCursor.primNull);
        })(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Argonaut_JCursor.primBool))(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Argonaut_JCursor.primNum))(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Argonaut_JCursor.primStr));
    };
    var toPrim = foldJsonP(Data_Maybe.Just.create)(Prelude["const"](Data_Maybe.Nothing.value))(Prelude["const"](Data_Maybe.Nothing.value));
    
    /**
     *  maybe return the width of a tuple composed of primitive values
     */
    var widthOfPrimTuple = function (maxTupleSize) {
        return function (path) {
            return function (ja) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](path)(0))(function (_1144) {
                    return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](ja)(1))(function (_1143) {
                        return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableArray)(ja)(toPrim))(function (_1142) {
                            var _1841 = Data_Array.length(ja) <= maxTupleSize;
                            if (_1841) {
                                return Data_Maybe.Just.create(Data_Array.length(ja));
                            };
                            if (!_1841) {
                                return Data_Maybe.Nothing.value;
                            };
                            throw new Error("Failed pattern match");
                        });
                    });
                });
            };
        };
    };
    
    /**
     *  produce a tree of header data from json
     */
    var tFromJson = function (maxTupleSize) {
        return function (label) {
            return function (path) {
                var tuple = function (ja) {
                    return Prelude["<#>"](Data_Maybe.functorMaybe)(widthOfPrimTuple(maxTupleSize)(path)(ja))(function (n) {
                        return new T(label, path, n, 0, [  ]);
                    });
                };
                var prim = function (jp) {
                    return new T(label, path, 1, 0, [  ]);
                };
                var obj = function (jo) {
                    var _1842 = Data_StrMap.isEmpty(jo);
                    if (_1842) {
                        return new T(label, path, 1, 0, [  ]);
                    };
                    if (!_1842) {
                        var k = Prelude["<#>"](Data_Array.functorArray)(Data_StrMap.toList(jo))(Data_Tuple.uncurry(function (l) {
                            return function (j) {
                                return tFromJson(maxTupleSize)(l)(Data_Array.snoc(path)(l))(j);
                            };
                        }));
                        var w = Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude["+"](Prelude.semiringNumber))(0)(Prelude["<#>"](Data_Array.functorArray)(k)(tWidth));
                        var h = 1 + Data_Foldable.foldl(Data_Foldable.foldableArray)($$Math.max)(0)(Prelude["<#>"](Data_Array.functorArray)(k)(tHeight));
                        return new T(label, path, w, h, k);
                    };
                    throw new Error("Failed pattern match");
                };
                var array = function (ja) {
                    var ts = Prelude["<#>"](Data_Array.functorArray)(ja)(tFromJson(maxTupleSize)(label)(path));
                    var t = Data_Foldable.foldl(Data_Foldable.foldableArray)(tMergeArray)(new T(label, path, 0, 0, [  ]))(Prelude[">>="](Data_Array.bindArray)(ts)(tKids));
                    var w = $$Math.max(tWidth(t))((function () {
                        var _1843 = Data_Array.nub(Prelude.eqNumber)(Prelude["<#>"](Data_Array.functorArray)(ts)(tWidth));
                        if (_1843.length >= 1) {
                            var _1845 = _1843.slice(1);
                            if (_1845.length === 0) {
                                return _1843[0];
                            };
                        };
                        return 1;
                    })());
                    return new T(label, path, w, tHeight(t), tKids(t));
                };
                return foldJsonP(prim)(Prelude["<*>"](Prelude.applyArr)(Prelude["<$>"](Prelude.functorArr)(Data_Maybe.fromMaybe)(array))(tuple))(obj);
            };
        };
    };
    
    /**
     *  merge table segments for each key of an object into one
     */
    var cMergeObj = function (rss) {
        var maxh = Data_Foldable.foldl(Data_Foldable.foldableArray)($$Math.max)(0)(Prelude["<#>"](Data_Array.functorArray)(Prelude["<#>"](Data_Array.functorArray)(rss)(Data_Tuple.snd))(Data_Array.length));
        return Prelude["<#>"](Data_Array.functorArray)(Data_Array.range(0)($$Math.max(0)(maxh - 1)))(function (n) {
            return Prelude[">>="](Data_Array.bindArray)(rss)(Data_Tuple.uncurry(function (w) {
                return function (rs) {
                    var rnOr = function (_1) {
                        return Data_Maybe.fromMaybe(_1)(Data_Array["!!"](rs)(n));
                    };
                    if (rs.length >= 1) {
                        var _1854 = rs.slice(1);
                        if (_1854.length === 0) {
                            var _1847 = n === 0;
                            if (_1847) {
                                return Prelude["<#>"](Data_Array.functorArray)(rs[0])(function (_1145) {
                                    return new C(_1145.value0, _1145.value1, maxh, _1145.value3);
                                });
                            };
                            if (!_1847) {
                                return rnOr([  ]);
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return rnOr([ new C(Data_Argonaut_JCursor.JCursorTop.value, w, 1, Data_Argonaut_JCursor.primNull) ]);
                };
            }));
        });
    };
    var mergeObjTuple = function (_1162) {
        return function (_1163) {
            return function (_1164) {
                return function (_1165) {
                    return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array.head(_1165))(function () {
                        return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableArray)(_1165)(Data_Argonaut_Core.toObject))(function (_45) {
                            var keyss = Prelude["<#>"](Data_Array.functorArray)(_45)(Data_StrMap.keys);
                            var all_keys = Data_Array.concat(keyss);
                            return Prelude[">>="](Data_Maybe.bindMaybe)(Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)(Data_Array.length(all_keys) === Data_Array.length(Data_Array.nub(Prelude.eqString)(all_keys))))(function () {
                                return Data_Maybe.Just.create(cMergeObj(Prelude["<#>"](Data_Array.functorArray)(_1163.value4)(function (_1146) {
                                    var i = Data_Array.findIndex(Data_Foldable.elem(Prelude.eqString)(Data_Foldable.foldableArray)(_1146.value0))(keyss);
                                    var j = Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primToJson(Data_Argonaut_JCursor.primNull))(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](_45)(i))(Data_StrMap.lookup(_1146.value0)));
                                    return new Data_Tuple.Tuple(_1146.value2, cFromJson(_1162)(_1146)(Data_Argonaut_JCursor.downField(_1146.value0)(Data_Argonaut_JCursor.downIndex(i)(_1164)))(j));
                                })));
                            });
                        });
                    });
                };
            };
        };
    };
    var cFromJson = function (_1166) {
        return function (_1167) {
            return function (_1168) {
                var width = (function () {
                    var _1874 = Data_Array["null"](_1167.value4) && _1167.value2 > 1;
                    if (_1874) {
                        return widthOfPrimTuple(_1166)(_1167.value1);
                    };
                    if (!_1874) {
                        return Prelude["const"](Data_Maybe.Nothing.value);
                    };
                    throw new Error("Failed pattern match");
                })();
                var primtup = function (ja) {
                    return Prelude["<#>"](Data_Maybe.functorMaybe)(width(ja))(function (_1147) {
                        return Data_Array.singleton(Prelude["<#>"](Data_Array.functorArray)(Data_Array[".."](0)(_1167.value2 - 1))(function (i) {
                            return C.create(Data_Argonaut_JCursor.downIndex(i)(_1168))(1)(1)(Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primNull)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](ja)(i))(toPrim)));
                        }));
                    });
                };
                var prim = function (jp) {
                    return [ [ new C(_1168, _1167.value2, 1, jp) ] ];
                };
                var objtup = mergeObjTuple(_1166)(_1167)(_1168);
                var tuple = function (ja) {
                    var _1876 = primtup(ja);
                    if (_1876 instanceof Data_Maybe.Nothing) {
                        return objtup(ja);
                    };
                    return _1876;
                };
                var obj = function (jo) {
                    var _1877 = Data_StrMap.isEmpty(jo);
                    if (_1877) {
                        return [ [ new C(_1168, _1167.value2, 1, Data_Argonaut_JCursor.primNull) ] ];
                    };
                    if (!_1877) {
                        return cMergeObj(Prelude["<#>"](Data_Array.functorArray)(_1167.value4)(function (_1148) {
                            var j = Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primToJson(Data_Argonaut_JCursor.primNull))(Data_StrMap.lookup(_1148.value0)(jo));
                            return new Data_Tuple.Tuple(_1148.value2, cFromJson(_1166)(_1148)(Data_Argonaut_JCursor.downField(_1148.value0)(_1168))(j));
                        }));
                    };
                    throw new Error("Failed pattern match");
                };
                var array = function (ja) {
                    return Prelude[">>="](Data_Array.bindArray)(zipWithIndex(ja))(Data_Tuple.uncurry(function (j) {
                        return function (i) {
                            return cFromJson(_1166)(_1167)(Data_Argonaut_JCursor.downIndex(i)(_1168))(j);
                        };
                    }));
                };
                return foldJsonP(prim)(Prelude["<*>"](Prelude.applyArr)(Prelude["<$>"](Prelude.functorArr)(Data_Maybe.fromMaybe)(array))(tuple))(obj);
            };
        };
    };
    var _nattr = function (attr) {
        return function (n) {
            return function (m) {
                var _1889 = n > 1;
                if (_1889) {
                    return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupM)(m)(Text_Smolder_Markup.attribute(attr)(Prelude.show(Prelude.showNumber)(n)));
                };
                if (!_1889) {
                    return m;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var _rspan = _nattr("rowspan");
    var _cspan = _nattr("colspan");
    var renderTbody = function (tr$prime) {
        return function (tdf) {
            return function (t) {
                return function (table) {
                    var tdf$prime = function (_1181) {
                        return function (_1182) {
                            return function (_1183) {
                                return Prelude[">>>"](Prelude.semigroupoidArr)(_cspan(_1183.value1))(_rspan(_1183.value2))(tdf(_1183));
                            };
                        };
                    };
                    return renderRows(tr$prime)(tdf$prime)(table);
                };
            };
        };
    };
    var renderThead = function (_1169) {
        return function (_1170) {
            return function (_1171) {
                var rs = function (i) {
                    return function (k_1) {
                        var _1900 = Data_Array["null"](k_1);
                        if (_1900) {
                            return _1171.value3 - i;
                        };
                        if (!_1900) {
                            return 1;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                var tdf$prime = function (_1178) {
                    return function (_1179) {
                        return function (_1180) {
                            return Prelude[">>>"](Prelude.semigroupoidArr)(_cspan(_1180.value2))(_rspan(rs(_1178)(_1180.value4)))(_1170(_1180));
                        };
                    };
                };
                return renderRows(_1169)(tdf$prime)(tsToRows(_1171.value4));
            };
        };
    };
    
    /**
     *  renderJTableRaw :: {...} -> Json -> Markup
     */
    var renderJTableRaw = function (o) {
        return function (json) {
            var rawT = tFromJson(o.maxTupleSize)("")([  ])(json);
            var sortedT = sortTree(o.columnOrdering)(rawT);
            var table = cFromJson(o.maxTupleSize)(sortedT)(Data_Argonaut_JCursor.JCursorTop.value)(json);
            var paddedT = (function () {
                if (o.insertHeaderCells) {
                    return padTree(tHeight(sortedT));
                };
                if (!o.insertHeaderCells) {
                    return Prelude.id(Prelude.categoryArr);
                };
                throw new Error("Failed pattern match");
            })()(sortedT);
            return o.style.table(Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_HTML.thead(renderThead(o.style.tr)(o.style.th)(paddedT)))(function () {
                return Text_Smolder_HTML.tbody(renderTbody(o.style.tr)(o.style.td)(sortedT)(table));
            }));
        };
    };
    return {
        C: C, 
        T: T, 
        _rspan: _rspan, 
        _cspan: _cspan, 
        _nattr: _nattr, 
        strcmp: strcmp, 
        zipWithIndex: zipWithIndex, 
        toPrim: toPrim, 
        foldJsonP: foldJsonP, 
        mergeObjTuple: mergeObjTuple, 
        cMergeObj: cMergeObj, 
        cFromJson: cFromJson, 
        padTree: padTree, 
        widthOfPrimTuple: widthOfPrimTuple, 
        tMergeArray: tMergeArray, 
        tFromJson: tFromJson, 
        tKids: tKids, 
        tHeight: tHeight, 
        tWidth: tWidth, 
        sortTree: sortTree, 
        tsToRows: tsToRows, 
        renderTbody: renderTbody, 
        renderThead: renderThead, 
        renderRows: renderRows, 
        renderJTableRaw: renderJTableRaw
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML_Attributes = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Prelude = PS.Prelude;
    var style = Text_Smolder_Markup.attribute("style");
    var className = Text_Smolder_Markup.attribute("class");
    return {
        style: style, 
        className: className
    };
})();
var PS = PS || {};
PS.Data_Json_JTable = (function () {
    "use strict";
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Prelude = PS.Prelude;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_String = PS.Data_String;
    var Data_Foldable = PS.Data_Foldable;
    var Text_Smolder_HTML_Attributes = PS.Text_Smolder_HTML_Attributes;
    var Data_Json_JTable_Internal = PS.Data_Json_JTable_Internal;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var renderJsonSimple = function (j) {
        return Data_Argonaut_JCursor.runJsonPrim(j)(Prelude["const"]("&nbsp;"))(Prelude.show(Prelude.showBoolean))(Prelude.show(Prelude.showNumber))(Prelude.id(Prelude.categoryArr));
    };
    var renderJTable = function (o) {
        return Data_Json_JTable_Internal.renderJTableRaw((function () {
            var _1928 = {};
            for (var _1929 in o) {
                if (o.hasOwnProperty(_1929)) {
                    _1928[_1929] = o[_1929];
                };
            };
            _1928.style = (function () {
                var _1926 = {};
                for (var _1927 in o.style) {
                    if (o.style.hasOwnProperty(_1927)) {
                        _1926[_1927] = o.style[_1927];
                    };
                };
                _1926.th = function (_1184) {
                    return o.style.th(_1184.value0)(_1184.value1);
                };
                _1926.td = function (_1185) {
                    return o.style.td(_1185.value0)(_1185.value3);
                };
                return _1926;
            })();
            return _1928;
        })());
    };
    var noStyle = {
        table: Text_Smolder_HTML.table, 
        tr: Text_Smolder_HTML.tr, 
        th: function (l) {
            return function (p) {
                return Text_Smolder_HTML.th(Text_Smolder_Markup.text(l));
            };
        }, 
        td: function (c) {
            return function (j) {
                return Text_Smolder_HTML.td(Text_Smolder_Markup.text(renderJsonSimple(j)));
            };
        }
    };
    var inOrdering = function (l1) {
        return function (p1) {
            return function (l2) {
                return function (p2) {
                    return Prelude.EQ.value;
                };
            };
        };
    };
    var jTableOptsDefault = {
        style: noStyle, 
        columnOrdering: inOrdering, 
        insertHeaderCells: false, 
        maxTupleSize: 10
    };
    var renderJTableDef = renderJTable(jTableOptsDefault);
    var debugStyle = (function () {
        var _1930 = {};
        for (var _1931 in noStyle) {
            if (noStyle.hasOwnProperty(_1931)) {
                _1930[_1931] = noStyle[_1931];
            };
        };
        _1930.th = function (l) {
            return function (p) {
                return Text_Smolder_HTML.th(Text_Smolder_Markup.text(Data_String.joinWith(".")(p)));
            };
        };
        _1930.td = function (c) {
            return function (j) {
                return Text_Smolder_HTML.td(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)([ Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.small)(Text_Smolder_HTML_Attributes.className("grey"))(Text_Smolder_Markup.text(Prelude.show(Data_Argonaut_JCursor.showJCursor)(c))), Text_Smolder_HTML.br, Text_Smolder_Markup.text(Prelude.show(Data_Argonaut_JCursor.showJsonPrim)(j)) ]));
            };
        };
        return _1930;
    })();
    var bootstrapStyle = (function () {
        var _1932 = {};
        for (var _1933 in noStyle) {
            if (noStyle.hasOwnProperty(_1933)) {
                _1932[_1933] = noStyle[_1933];
            };
        };
        _1932.table = function (m) {
            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.table)(Text_Smolder_Markup.attribute("class")("table"))(m);
        };
        return _1932;
    })();
    var alphaOrdering = function (l1) {
        return function (p1) {
            return function (l2) {
                return function (p2) {
                    return Data_Json_JTable_Internal.strcmp(l1)(l2);
                };
            };
        };
    };
    return {
        debugStyle: debugStyle, 
        bootstrapStyle: bootstrapStyle, 
        noStyle: noStyle, 
        alphaOrdering: alphaOrdering, 
        inOrdering: inOrdering, 
        jTableOptsDefault: jTableOptsDefault, 
        renderJTableDef: renderJTableDef, 
        renderJTable: renderJTable
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_Util = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Map = PS.Data_Map;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Array = PS.Data_Array;
    var Element = (function () {
        function Element(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new Element(value0, value1, value2);
                };
            };
        };
        return Element;
    })();
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var renderAttrs = function (xs) {
        var toTuple = function (_1187) {
            return new Data_Tuple.Tuple(_1187.value0, _1187.value1);
        };
        return Data_Map.fromList(Prelude.ordString)(Prelude["<$>"](Data_Array.functorArray)(toTuple)(xs));
    };
    var renderMarkup = function (_1186) {
        if (_1186 instanceof Text_Smolder_Markup.Element && _1186.value1 instanceof Data_Maybe.Just) {
            return Prelude[":"](new Element(_1186.value0, renderAttrs(_1186.value2), renderMarkup(_1186.value1.value0)))(renderMarkup(_1186.value3));
        };
        if (_1186 instanceof Text_Smolder_Markup.Element && _1186.value1 instanceof Data_Maybe.Nothing) {
            return Prelude[":"](new Element(_1186.value0, renderAttrs(_1186.value2), [  ]))(renderMarkup(_1186.value3));
        };
        if (_1186 instanceof Text_Smolder_Markup.Content) {
            return Prelude[":"](new Text(_1186.value0))(renderMarkup(_1186.value1));
        };
        if (_1186 instanceof Text_Smolder_Markup.Return) {
            return [  ];
        };
        throw new Error("Failed pattern match");
    };
    return {
        Element: Element, 
        Text: Text, 
        renderMarkup: renderMarkup
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Map = PS.Data_Map;
    var Text_Smolder_Renderer_Util = PS.Text_Smolder_Renderer_Util;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var renderNode = function (_1188) {
        if (_1188 instanceof Text_Smolder_Renderer_Util.Element) {
            var showTail = function (_1189) {
                if (_1189.length === 0) {
                    return "/>";
                };
                return ">" + (Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(Prelude.show(showNode))(_1189)) + ("</" + (_1188.value0 + ">")));
            };
            var showAttrs = function (a_1) {
                var pair = function (k) {
                    return " " + (k + (function () {
                        var _1952 = Data_Map.lookup(Prelude.ordString)(k)(a_1);
                        if (_1952 instanceof Data_Maybe.Just) {
                            return "=\"" + (_1952.value0 + "\"");
                        };
                        if (_1952 instanceof Data_Maybe.Nothing) {
                            return "";
                        };
                        throw new Error("Failed pattern match");
                    })());
                };
                return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(pair)(Data_Map.keys(a_1)));
            };
            return "<" + (_1188.value0 + (showAttrs(_1188.value1) + showTail(_1188.value2)));
        };
        if (_1188 instanceof Text_Smolder_Renderer_Util.Text) {
            return _1188.value0;
        };
        throw new Error("Failed pattern match");
    };
    var showNode = new Prelude.Show(renderNode);
    var render = function (m) {
        return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(renderNode)(Text_Smolder_Renderer_Util.renderMarkup(m)));
    };
    return {
        renderNode: renderNode, 
        render: render, 
        showNode: showNode
    };
})();
var PS = PS || {};
PS.Test_StrongCheck_Gen = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Arrow = PS.Control_Arrow;
    var Data_Machine_Mealy = PS.Data_Machine_Mealy;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Char = PS.Data_Char;
    var $$Math = PS.$$Math;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_ListT = PS.Control_Monad_ListT;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Control_Monad = PS.Control_Monad;
    var Control_Bind = PS.Control_Bind;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var GenState = (function () {
        function GenState(value0) {
            this.value0 = value0;
        };
        GenState.create = function (value0) {
            return new GenState(value0);
        };
        return GenState;
    })();
    var GenOut = (function () {
        function GenOut(value0) {
            this.value0 = value0;
        };
        GenOut.create = function (value0) {
            return new GenOut(value0);
        };
        return GenOut;
    })();
    var GenT = (function () {
        function GenT(value0) {
            this.value0 = value0;
        };
        GenT.create = function (value0) {
            return new GenT(value0);
        };
        return GenT;
    })();
    var unGenState = function (_1192) {
        return _1192.value0;
    };
    var unGenOut = function (_1193) {
        return _1193.value0;
    };
    var unGen = function (_1194) {
        return _1194.value0;
    };
    
    /**
     *  | Transforms one gen into another, passing along user-supplied state.
     *  | Either the generator being transformed or the transforming function may
     *  | halt the transformation.
     */
    var transGen = function (__dict_Monad_977) {
        return function (_1209) {
            return function (_1210) {
                return function (_1211) {
                    var loop = function (m_1) {
                        return function (b_1) {
                            var g = function (_1226) {
                                if (_1226 instanceof Data_Machine_Mealy.Halt) {
                                    return Prelude.pure(__dict_Monad_977["__superclass_Prelude.Applicative_0"]())(Data_Machine_Mealy.Halt.value);
                                };
                                if (_1226 instanceof Data_Machine_Mealy.Emit) {
                                    var _1968 = _1209(b_1)(_1226.value0.value0.value);
                                    if (_1968.value1 instanceof Data_Maybe.Nothing) {
                                        return Data_Machine_Mealy.stepMealy(__dict_Monad_977)(_1226.value0.value0.state)(loop(_1226.value1)(_1968.value0));
                                    };
                                    if (_1968.value1 instanceof Data_Maybe.Just) {
                                        var c$prime = new GenOut({
                                            value: _1968.value1.value0, 
                                            state: _1226.value0.value0.state
                                        });
                                        return Prelude.pure(__dict_Monad_977["__superclass_Prelude.Applicative_0"]())(new Data_Machine_Mealy.Emit(c$prime, loop(_1226.value1)(_1968.value0)));
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Data_Machine_Mealy.mealy(__dict_Monad_977["__superclass_Prelude.Applicative_0"]())(function (st) {
                                return Prelude[">>="](__dict_Monad_977["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_977)(st)(m_1))(g);
                            });
                        };
                    };
                    return GenT.create(loop(_1211.value0)(_1210));
                };
            };
        };
    };
    
    /**
     *  | Creates a generator that depends on access to the generator state.
     */
    var stateful = function (__dict_Monad_979) {
        return function (f) {
            return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_979))(Data_Machine_Mealy.take(__dict_Monad_979)(1)(Prelude.id(Data_Machine_Mealy.categoryMealy(__dict_Monad_979))))(function (_48) {
                return unGen(f(_48));
            }));
        };
    };
    var stateM = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(GenState.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(unGenState));
    };
    
    /**
     *  | Creates a generator that depends on the size parameter.
     */
    var sized = function (__dict_Monad_981) {
        return function (f) {
            return stateful(__dict_Monad_981)(function (s) {
                return f((unGenState(s)).size);
            });
        };
    };
    var semigroupGenT = function (__dict_Monad_982) {
        return new Prelude.Semigroup(function (_1243) {
            return function (_1244) {
                return new GenT(Prelude["<>"](Data_Machine_Mealy.semigroupMealy(__dict_Monad_982))(_1243.value0)(_1244.value0));
            };
        });
    };
    
    /**
     *  | Resizes the generator so the size parameter passed into the generator
     *  | will be equal to the specified size.
     */
    var resize = function (__dict_Monad_984) {
        return function (sz) {
            return function (g) {
                return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_984))(stateM(function (s) {
                    var _1985 = {};
                    for (var _1986 in s) {
                        if (s.hasOwnProperty(_1986)) {
                            _1985[_1986] = s[_1986];
                        };
                    };
                    _1985.size = sz;
                    return _1985;
                }))(unGen(g)));
            };
        };
    };
    var lcgN = 1 << 30;
    var lcgM = 1103515245;
    var lcgC = 12345;
    var lcgNext = function (n) {
        return (lcgM * n + lcgC) % lcgN;
    };
    var updateSeedState = function (_1199) {
        return new GenState({
            seed: lcgNext(_1199.value0.seed), 
            size: _1199.value0.size
        });
    };
    var lcgStep = function (__dict_Monad_995) {
        return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_995))(function (s) {
            return new GenOut({
                state: updateSeedState(s), 
                value: (unGenState(s)).seed
            });
        }));
    };
    var updateSeedGen = function (__dict_Monad_997) {
        return function (_1200) {
            return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_997))(updateSeedState)(_1200.value0));
        };
    };
    
    /**
     *  FIXME: workaround type inference unification bug
     */
    var ifThenElse = function (p) {
        return function (a) {
            return function (b) {
                if (p) {
                    return a;
                };
                if (!p) {
                    return b;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var functorGenOut = new Prelude.Functor(function (_1237) {
        return function (_1238) {
            return new GenOut({
                state: _1238.value0.state, 
                value: _1237(_1238.value0.value)
            });
        };
    });
    
    /**
     *  GenT instances
     */
    var functorGenT = function (__dict_Monad_1002) {
        return new Prelude.Functor(function (_1241) {
            return function (_1242) {
                return GenT.create(Prelude["<$>"](Data_Machine_Mealy.functorMealy(__dict_Monad_1002))(Prelude["<$>"](functorGenOut)(_1241))(_1242.value0));
            };
        });
    };
    var uniform = function (__dict_Monad_996) {
        return Prelude["<$>"](functorGenT(__dict_Monad_996))(function (n) {
            return n / (1 << 30);
        })(lcgStep(__dict_Monad_996));
    };
    
    /**
     *  | Folds over a generator to produce a value. Either the generator or the
     *  | user-defined function may halt the fold. Returns not just the value
     *  | created through folding, but also the successor generator.
     */
    var foldGen$prime = function (__dict_Monad_1003) {
        return function (_1205) {
            return function (_1206) {
                return function (_1207) {
                    return function (_1208) {
                        var loop = function (st) {
                            return function (m_1) {
                                return function (b_1) {
                                    var g = function (_1225) {
                                        if (_1225 instanceof Data_Machine_Mealy.Halt) {
                                            return Prelude.pure(__dict_Monad_1003["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(b_1, new GenT(Data_Machine_Mealy.halt(__dict_Monad_1003["__superclass_Prelude.Applicative_0"]()))));
                                        };
                                        if (_1225 instanceof Data_Machine_Mealy.Emit) {
                                            var b$prime = _1205(b_1)(_1225.value0.value0.value);
                                            return Data_Maybe.maybe(Prelude.pure(__dict_Monad_1003["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(b_1, new GenT(_1225.value1))))(loop(_1225.value0.value0.state)(_1225.value1))(b$prime);
                                        };
                                        throw new Error("Failed pattern match");
                                    };
                                    return Prelude[">>="](__dict_Monad_1003["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_1003)(st)(m_1))(g);
                                };
                            };
                        };
                        return loop(_1207)(_1208.value0)(_1206);
                    };
                };
            };
        };
    };
    
    /**
     *  | Extends a generator to produce *at least* the specified number of values.
     *  | Will not turn a finite generator into an infinite one.
     */
    var extend = function (__dict_Monad_1005) {
        return function (_1201) {
            return function (_1202) {
                var loop = function (i) {
                    return function (m_1) {
                        return Data_Machine_Mealy.mealy(__dict_Monad_1005["__superclass_Prelude.Applicative_0"]())(function (st) {
                            var f = function (_1224) {
                                if (_1224 instanceof Data_Machine_Mealy.Halt) {
                                    var _2012 = i >= _1201;
                                    if (_2012) {
                                        return Prelude.pure(__dict_Monad_1005["__superclass_Prelude.Applicative_0"]())(Data_Machine_Mealy.Halt.value);
                                    };
                                    if (!_2012) {
                                        return Data_Machine_Mealy.stepMealy(__dict_Monad_1005)(st)(loop(i)(_1202.value0));
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                if (_1224 instanceof Data_Machine_Mealy.Emit) {
                                    return Prelude.pure(__dict_Monad_1005["__superclass_Prelude.Applicative_0"]())(new Data_Machine_Mealy.Emit(_1224.value0, loop(i + 1)(_1224.value1)));
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Prelude[">>="](__dict_Monad_1005["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_1005)(st)(m_1))(f);
                        });
                    };
                };
                return Prelude["<>"](semigroupGenT(__dict_Monad_1005))(GenT.create(loop(0)(_1202.value0)))(new GenT(_1202.value0));
            };
        };
    };
    
    /**
     *  | Runs a generator to produce a specified number of values, returning both
     *  | an array containing the values and the successor Gen that can be used to
     *  | continue the generation process at a later time.
     */
    var runGen = function (__dict_Monad_1006) {
        return function (n) {
            return function (st) {
                return function (g) {
                    var f = function (v) {
                        return function (a) {
                            return ifThenElse(Data_Array.length(v) < n)(Data_Maybe.Just.create(Prelude["<>"](Data_Array.semigroupArray)(v)([ a ])))(Data_Maybe.Nothing.value);
                        };
                    };
                    return foldGen$prime(__dict_Monad_1006)(f)([  ])(st)(extend(__dict_Monad_1006)(n)(g));
                };
            };
        };
    };
    
    /**
     *  | Creates a generator that generates arrays of some specified size.
     */
    var vectorOf = function (__dict_Monad_1011) {
        return function (n) {
            return function (g) {
                var f = function (b) {
                    return function (a) {
                        var b$prime = Prelude["<>"](Data_Array.semigroupArray)(b)([ a ]);
                        var _2016 = Data_Array.length(b$prime) >= n;
                        if (_2016) {
                            return new Data_Tuple.Tuple([  ], new Data_Maybe.Just(b$prime));
                        };
                        if (!_2016) {
                            return new Data_Tuple.Tuple(b$prime, Data_Maybe.Nothing.value);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                return transGen(__dict_Monad_1011)(f)([  ])(extend(__dict_Monad_1011)(n)(g));
            };
        };
    };
    
    /**
     *  | Creates a generator that generates integers between the specified
     *  | inclusive range.
     */
    var chooseInt = function (__dict_Monad_1017) {
        return function (a) {
            return function (b) {
                var min = $$Math.ceil($$Math.min(a)(b));
                var max = $$Math.floor($$Math.max(a)(b));
                return Prelude["<$>"](functorGenT(__dict_Monad_1017))(Prelude["<<<"](Prelude.semigroupoidArr)($$Math.round)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["+"](Prelude.semiringNumber)(min - 0.5))(Prelude["*"](Prelude.semiringNumber)((max - min) + 1))))(uniform(__dict_Monad_1017));
            };
        };
    };
    
    /**
     *  | A generator for characters.
     */
    var charGen = function (__dict_Monad_1023) {
        return Prelude["<$>"](functorGenT(__dict_Monad_1023))(Data_Char.fromCharCode)(chooseInt(__dict_Monad_1023)(0)(65535));
    };
    var applyGenOut = new Prelude.Apply(function (_1239) {
        return function (_1240) {
            return new GenOut({
                state: _1240.value0.state, 
                value: _1239.value0.value(_1240.value0.value)
            });
        };
    }, function () {
        return functorGenOut;
    });
    var applyGenT = function (__dict_Monad_1027) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_1027))(unGen(f))(function (_61) {
                    return Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_1027))(unGen(updateSeedGen(__dict_Monad_1027)(x)))(function (_60) {
                        return Prelude["return"](Data_Machine_Mealy.monadMealy(__dict_Monad_1027))(Prelude["<*>"](applyGenOut)(_61)(_60));
                    });
                }));
            };
        }, function () {
            return functorGenT(__dict_Monad_1027);
        });
    };
    var bindGenT = function (__dict_Monad_1024) {
        return new Prelude.Bind(function (_1245) {
            return function (_1246) {
                return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_1024))(_1245.value0)(function (_62) {
                    return unGen(updateSeedGen(__dict_Monad_1024)(_1246((unGenOut(_62)).value)));
                }));
            };
        }, function () {
            return applyGenT(__dict_Monad_1024);
        });
    };
    
    /**
     *  | Creates a generator that chooses another generator from the specified list
     *  | at random, and then generates a value with that generator.
     */
    var oneOf = function (__dict_Monad_1020) {
        return function (x) {
            return function (xs) {
                return Prelude[">>="](bindGenT(__dict_Monad_1020))(chooseInt(__dict_Monad_1020)(0)(Data_Array.length(xs)))(function (_49) {
                    var _2028 = _49 === 0;
                    if (_2028) {
                        return x;
                    };
                    if (!_2028) {
                        return Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_49 - 1));
                    };
                    throw new Error("Failed pattern match");
                });
            };
        };
    };
    var applicativeGenT = function (__dict_Monad_1029) {
        return new Prelude.Applicative(function () {
            return applyGenT(__dict_Monad_1029);
        }, function (t) {
            return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_1029))(function (s) {
                return new GenOut({
                    state: updateSeedState(s), 
                    value: t
                });
            }));
        });
    };
    var monadGenT = function (__dict_Monad_991) {
        return new Prelude.Monad(function () {
            return applicativeGenT(__dict_Monad_991);
        }, function () {
            return bindGenT(__dict_Monad_991);
        });
    };
    return {
        GenOut: GenOut, 
        GenState: GenState, 
        GenT: GenT, 
        vectorOf: vectorOf, 
        updateSeedState: updateSeedState, 
        unGenState: unGenState, 
        unGenOut: unGenOut, 
        unGen: unGen, 
        uniform: uniform, 
        transGen: transGen, 
        stateful: stateful, 
        sized: sized, 
        runGen: runGen, 
        resize: resize, 
        oneOf: oneOf, 
        "foldGen'": foldGen$prime, 
        extend: extend, 
        chooseInt: chooseInt, 
        charGen: charGen, 
        functorGenOut: functorGenOut, 
        applyGenOut: applyGenOut, 
        functorGenT: functorGenT, 
        applyGenT: applyGenT, 
        applicativeGenT: applicativeGenT, 
        semigroupGenT: semigroupGenT, 
        bindGenT: bindGenT, 
        monadGenT: monadGenT
    };
})();
var PS = PS || {};
PS.Test_StrongCheck = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Test_StrongCheck_Gen = PS.Test_StrongCheck_Gen;
    var Data_Array = PS.Data_Array;
    var $$Math = PS.$$Math;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Enum = PS.Data_Enum;
    var Data_Char = PS.Data_Char;
    var Data_String = PS.Data_String;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Bind = PS.Control_Bind;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Arbitrary = function (arbitrary) {
        this.arbitrary = arbitrary;
    };
    var arbitrary = function (dict) {
        return dict.arbitrary;
    };
    var arbTuple = function (__dict_Arbitrary_1065) {
        return function (__dict_Arbitrary_1066) {
            return new Arbitrary(Prelude["<*>"](Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Tuple.Tuple.create)(arbitrary(__dict_Arbitrary_1065)))(arbitrary(__dict_Arbitrary_1066)));
        };
    };
    var arbNumber = new Arbitrary(Test_StrongCheck_Gen.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)));
    var arbChar = new Arbitrary(Test_StrongCheck_Gen.charGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)));
    var arbBoolean = new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(function (_68) {
        return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))((_68 * 2) < 1);
    }));
    var arbArray = function (__dict_Arbitrary_1074) {
        return new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbBoolean))(function (_75) {
            if (_75) {
                return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))([  ]);
            };
            if (!_75) {
                return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(__dict_Arbitrary_1074))(function (_74) {
                    return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbArray(__dict_Arbitrary_1074)))(function (_73) {
                        return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude[":"](_74)(_73));
                    });
                });
            };
            throw new Error("Failed pattern match");
        }));
    };
    var arbString = new Arbitrary(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_String.fromCharArray)(arbitrary(arbArray(arbChar))));
    return {
        Arbitrary: Arbitrary, 
        arbitrary: arbitrary, 
        arbNumber: arbNumber, 
        arbBoolean: arbBoolean, 
        arbChar: arbChar, 
        arbString: arbString, 
        arbTuple: arbTuple, 
        arbArray: arbArray
    };
})();
var PS = PS || {};
PS.Data_Json_Gen = (function () {
    "use strict";
    var Test_StrongCheck_Gen = PS.Test_StrongCheck_Gen;
    var Prelude = PS.Prelude;
    var Data_Argonaut = PS.Data_Argonaut;
    var Test_StrongCheck = PS.Test_StrongCheck;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var genJsonObject = Test_StrongCheck_Gen.sized(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(function (size) {
        return Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck_Gen.vectorOf(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size)(Test_StrongCheck_Gen.resize(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size - 1)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbTuple(Test_StrongCheck.arbString)(arbJson)))))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_StrMap.fromList)(Data_Argonaut.fromObject));
    });
    var genJsonArray = Test_StrongCheck_Gen.sized(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(function (size) {
        return Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck_Gen.vectorOf(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size)(Test_StrongCheck_Gen.resize(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size - 1)(genJson)))(Data_Argonaut.fromArray);
    });
    var genJson = Test_StrongCheck_Gen.sized(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(function (size) {
        var _2034 = size === 0;
        if (_2034) {
            return Test_StrongCheck_Gen.oneOf(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Argonaut_Core.jsonNull))([ Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbBoolean))(Data_Argonaut.fromBoolean), Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbNumber))(Data_Argonaut.fromNumber), Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbBoolean))(Data_Argonaut.fromBoolean) ]);
        };
        if (!_2034) {
            return Test_StrongCheck_Gen.oneOf(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Argonaut_Core.jsonNull))([ Test_StrongCheck_Gen.resize(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size - 1)(genJsonArray), Test_StrongCheck_Gen.resize(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size - 1)(genJsonObject) ]);
        };
        throw new Error("Failed pattern match");
    });
    var arbJson = new Test_StrongCheck.Arbitrary(genJson);
    return {
        genJson: genJson, 
        genJsonObject: genJsonObject, 
        genJsonArray: genJsonArray, 
        arbJson: arbJson
    };
})();
var PS = PS || {};
PS.Data_Json_JTable_Examples = (function () {
    "use strict";
    var Data_Json_JTable = PS.Data_Json_JTable;
    var Data_Json_JSemantic = PS.Data_Json_JSemantic;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Prelude = PS.Prelude;
    var Text_Smolder_HTML_Attributes = PS.Text_Smolder_HTML_Attributes;
    var Data_String = PS.Data_String;
    var Control_Monad_JQuery = PS.Control_Monad_JQuery;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Text_Smolder_Renderer_String = PS.Text_Smolder_Renderer_String;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Control_Bind = PS.Control_Bind;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Test_StrongCheck_Gen = PS.Test_StrongCheck_Gen;
    var Data_Json_Gen = PS.Data_Json_Gen;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Timer = PS.Control_Timer;
    var DOM = PS.DOM;
    var Debug_Spy = PS.Debug_Spy;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Date = PS.Data_Date;
    function onCtrlEnter (sel) { return function (cb) { return function () {
  window.jQuery(sel).on("keyup", function (e) {
    if ((e.keyCode == 10 || e.keyCode == 13) && e.ctrlKey) {cb()} }) }}}
;
    function _benchmark (renderer) { return function (json) { return function () {
  var t1 = performance.now()
  for (var i=0; i<100; i++) { var markup = renderer(json) }
  var t2 = performance.now()
  return Math.floor(t2 - t1) / 100 }}}
;
    var setHtml = function (i) {
        return function (html) {
            return function __do() {
                var _86 = Control_Monad_JQuery.select(i)();
                Control_Monad_JQuery.clear(_86)();
                var _85 = Control_Monad_JQuery.create("<span>" + (html + "</span>"))();
                Control_Monad_JQuery.append(_85)(_86)();
                return Prelude.unit;
            };
        };
    };
    var randomJson = function __do() {
        var _83 = Control_Monad_Eff_Random.random();
        return (function () {
            var state = new Test_StrongCheck_Gen.GenState({
                size: 10, 
                seed: _83
            });
            return Prelude["return"](Control_Monad_Eff.monadEff)(Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primToJson(Data_Argonaut_JCursor.primNull))(Control_Bind["<=<"](Data_Maybe.bindMaybe)(Data_Array.head)(Data_Array.tail)(Data_Tuple.fst(Control_Monad_Trampoline.runTrampoline(Test_StrongCheck_Gen.runGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(2)(state)(Data_Json_Gen.genJson))))));
        })()();
    };
    
    /**
     *  we use style instead of class to keep it self-contained
     */
    var exSemantic = Data_Json_JTable.renderJTable((function () {
        var _2058 = {};
        for (var _2059 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_2059)) {
                _2058[_2059] = Data_Json_JTable.jTableOptsDefault[_2059];
            };
        };
        _2058.style = (function () {
            var _2056 = {};
            for (var _2057 in Data_Json_JTable.noStyle) {
                if (Data_Json_JTable.noStyle.hasOwnProperty(_2057)) {
                    _2056[_2057] = Data_Json_JTable.noStyle[_2057];
                };
            };
            _2056.td = function (c) {
                return function (j) {
                    var _2038 = Data_Json_JSemantic.toSemanticDef(j);
                    if (_2038 instanceof Data_Json_JSemantic.Integral) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("text-align:right"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_2038.value0)));
                    };
                    if (_2038 instanceof Data_Json_JSemantic.Fractional) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("text-align:right"))((function () {
                            var _2040 = Data_String.split(".")(Prelude.show(Prelude.showNumber)(_2038.value0));
                            if (_2040.length >= 2) {
                                var _2043 = _2040.slice(2);
                                if (_2043.length === 0) {
                                    return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup.text(_2040[0]))(function () {
                                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.small)(Text_Smolder_HTML_Attributes.style("color:#aaa"))(Text_Smolder_Markup.text("." + _2040[1]));
                                    });
                                };
                            };
                            return Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_2038.value0));
                        })());
                    };
                    if (_2038 instanceof Data_Json_JSemantic["Date"]) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_2038.value0)));
                    };
                    if (_2038 instanceof Data_Json_JSemantic.DateTime) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_2038.value0)));
                    };
                    if (_2038 instanceof Data_Json_JSemantic.Time) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_2038.value0)));
                    };
                    if (_2038 instanceof Data_Json_JSemantic.Interval) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_2038.value0) + (" - " + Prelude.show(Data_Date.showDate)(_2038.value1))));
                    };
                    if (_2038 instanceof Data_Json_JSemantic.Text) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text("&laquo;" + (_2038.value0 + "&raquo;")));
                    };
                    if (_2038 instanceof Data_Json_JSemantic.Bool) {
                        if (_2038.value0) {
                            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("background:#cfc; text-align:center"))(Text_Smolder_Markup.text("\u2714"));
                        };
                        if (!_2038.value0) {
                            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("background:#fcc; text-align:center"))(Text_Smolder_Markup.text("\u274c"));
                        };
                        throw new Error("Failed pattern match");
                    };
                    if (_2038 instanceof Data_Json_JSemantic.Percent) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("text-align: right"))((function () {
                            var _2053 = Prelude.compare(Prelude.ordNumber)(_2038.value0)(0);
                            if (_2053 instanceof Prelude.LT) {
                                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.style("color:#a00"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_2038.value0) + "% \u25be"));
                            };
                            if (_2053 instanceof Prelude.EQ) {
                                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.style("color:#000"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_2038.value0) + "% \u25c2"));
                            };
                            if (_2053 instanceof Prelude.GT) {
                                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.style("color:#0a0"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_2038.value0) + "% \u25b4"));
                            };
                            throw new Error("Failed pattern match");
                        })());
                    };
                    if (_2038 instanceof Data_Json_JSemantic.Currency) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_2038.value0)));
                    };
                    if (_2038 instanceof Data_Json_JSemantic.NA) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("background:#ddd"))(Text_Smolder_Markup.text("&nbsp;"));
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return _2056;
        })();
        return _2058;
    })());
    var exMaxTupleSIze = Data_Json_JTable.renderJTable((function () {
        var _2060 = {};
        for (var _2061 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_2061)) {
                _2060[_2061] = Data_Json_JTable.jTableOptsDefault[_2061];
            };
        };
        _2060.maxTupleSize = 3;
        return _2060;
    })());
    var exDefault = Data_Json_JTable.renderJTableDef;
    var exDebug = Data_Json_JTable.renderJTable((function () {
        var _2062 = {};
        for (var _2063 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_2063)) {
                _2062[_2063] = Data_Json_JTable.jTableOptsDefault[_2063];
            };
        };
        _2062.style = Data_Json_JTable.debugStyle;
        return _2062;
    })());
    var exAltHeader = Data_Json_JTable.renderJTable((function () {
        var _2064 = {};
        for (var _2065 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_2065)) {
                _2064[_2065] = Data_Json_JTable.jTableOptsDefault[_2065];
            };
        };
        _2064.insertHeaderCells = true;
        return _2064;
    })());
    var exAlphaColumnOrd = Data_Json_JTable.renderJTable((function () {
        var _2066 = {};
        for (var _2067 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_2067)) {
                _2066[_2067] = Data_Json_JTable.jTableOptsDefault[_2067];
            };
        };
        _2066.columnOrdering = Data_Json_JTable.alphaOrdering;
        return _2066;
    })());
    var exRenderers = [ new Data_Tuple.Tuple("Default", exDefault), new Data_Tuple.Tuple("Debug", exDebug), new Data_Tuple.Tuple("Semantic", exSemantic), new Data_Tuple.Tuple("AlphaColumnOrd", exAlphaColumnOrd), new Data_Tuple.Tuple("AltHeader", exAltHeader), new Data_Tuple.Tuple("MaxTupleSize", exMaxTupleSIze) ];
    var getInput = function __do() {
        var _78 = Prelude["<#>"](Control_Monad_Eff.functorEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#in"))(Control_Monad_JQuery.getValue))(Data_Foreign.readString)();
        if (_78 instanceof Data_Either.Right) {
            var _77 = Prelude["<#>"](Control_Monad_Eff.functorEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#select_renderer"))(Control_Monad_JQuery.getValue))(Data_Foreign.readString)();
            if (_77 instanceof Data_Either.Right) {
                var j = Data_Argonaut_Parser.jsonParser(_78.value0);
                return Prelude[">>="](Data_Either.bindEither)(j)(function (json) {
                    var _2070 = Data_Array.head(Data_Array.filter(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tuple.fst)(function (_2) {
                        return _2 === _77.value0;
                    }))(exRenderers));
                    if (_2070 instanceof Data_Maybe.Just) {
                        return Data_Either.Right.create(new Data_Tuple.Tuple(_2070.value0.value1, json));
                    };
                    return new Data_Either.Left("Invalid Renderer");
                });
            };
            throw new Error("Failed pattern match");
        };
        throw new Error("Failed pattern match");
    };
    var render = function __do() {
        var _79 = getInput();
        return setHtml("#out")((function () {
            if (_79 instanceof Data_Either.Right) {
                return Text_Smolder_Renderer_String.render(_79.value0.value0(_79.value0.value1));
            };
            if (_79 instanceof Data_Either.Left) {
                return _79.value0;
            };
            throw new Error("Failed pattern match");
        })())();
    };
    var selectExample = function __do() {
        var _82 = Prelude["<#>"](Control_Monad_Eff.functorEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#select_example"))(Control_Monad_JQuery.getValue))(Data_Foreign.readString)();
        if (_82 instanceof Data_Either.Right) {
            var _81 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#example-" + _82.value0))(Control_Monad_JQuery.getText)();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#in"))(Control_Monad_JQuery.setValue(_81))();
            return render();
        };
        throw new Error("Failed pattern match");
    };
    var clickRandom = function __do() {
        var _84 = randomJson();
        Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#in"))(Control_Monad_JQuery.setValue(Prelude.show(Data_Argonaut_Core.showJson)(_84)))();
        return render();
    };
    var benchmark = function __do() {
        var i = getInput();
        if (i instanceof Data_Either.Left) {
            return setHtml("#out")(i.value0)();
        };
        if (i instanceof Data_Either.Right) {
            var _80 = _benchmark(i.value0.value0)(i.value0.value1)();
            setHtml("#benchmark")(Prelude.show(Prelude.showNumber)(_80) + " ms")();
            return render();
        };
        throw new Error("Failed pattern match");
    };
    var main = Control_Monad_JQuery.ready(function __do() {
        selectExample();
        var on = function (i) {
            return function (ev) {
                return function (cb) {
                    return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select(i))(Control_Monad_JQuery.on(ev)(function (ev_1) {
                        return function (_1288) {
                            return cb;
                        };
                    }));
                };
            };
        };
        on("#select_example")("change")(selectExample)();
        on("#select_renderer")("change")(render)();
        on("#but_randomjson")("click")(clickRandom)();
        on("#but_render")("click")(render)();
        on("#but_benchmark")("click")(benchmark)();
        return onCtrlEnter("#in")(render)();
    });
    return {
        _benchmark: _benchmark, 
        onCtrlEnter: onCtrlEnter, 
        main: main, 
        setHtml: setHtml, 
        clickRandom: clickRandom, 
        randomJson: randomJson, 
        selectExample: selectExample, 
        benchmark: benchmark, 
        render: render, 
        getInput: getInput, 
        exRenderers: exRenderers, 
        exMaxTupleSIze: exMaxTupleSIze, 
        exAltHeader: exAltHeader, 
        exAlphaColumnOrd: exAlphaColumnOrd, 
        exSemantic: exSemantic, 
        exDebug: exDebug, 
        exDefault: exDefault
    };
})();
PS.Data_Json_JTable_Examples.main();

